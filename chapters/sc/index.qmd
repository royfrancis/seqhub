---
title: Gene expression
description: Single-cell RNA-Seq experiments and analyses
---

## Overview {#sc-overview}

**Current best practices in scRNA-Seq**

- Perform QC by finding outlier peaks in the number of genes, the count depth and the fraction of mitochondrial reads. Consider these covariates jointly instead of separately.
- Be as permissive of QC thresholding as possible, and revisit QC if downstream clustering cannot be interpreted.
- If the distribution of QC covariates differ between samples, QC thresholds should be determined separately for each sample to account for sample quality differences
- We recommend scran for normalization of non-full-length datasets. An alternative is to evaluate normalization approaches via scone especially for plate-based datasets. Full-length scRNA-seq protocols can be corrected for gene length using bulk methods.
- There is no consensus on scaling genes to 0 mean and unit variance. We prefer not to scale gene expression.
- Normalized data should be log(x+1)-transformed for use with downstream analysis methods that assume data are normally distributed.
- Regress out biological covariates only for trajectory inference and if other biological processes of interest are not masked by the regressed out biological covariate.
- Regress out technical and biological covariates jointly rather than serially.
- Plate-based dataset pre-processing may require regressing out counts, normalization via non-linear normalization methods or downsampling.
- We recommend performing batch correction via ComBat when cell type and state compositions between batches are consistent
- Data integration and batch correction should be performed by different methods. Data integration tools may over-correct simple batch effects.
- Users should be cautious of signals found only after expression recovery. Exploratory analysis may be best performed without this step.
- We recommend selecting between 1,000 and 5,000 highly variable genes depending on dataset complexity.
- Feature selection methods that use gene expression means and variances cannot be used when gene expression values have been normalized to zero mean and unit variance, or when residuals from model fitting are used as normalized expression values. Thus, one must consider what pre-processing to perform before selecting HVGs.
- Dimensionality reduction methods should be considered separately for summarization and visualization.
- We recommend UMAP for exploratory visualization; PCA for general purpose summarization; and diffusion maps as an alternative to PCA for trajectory inference summarization.
- PAGA with UMAP is a suitable alternative to visualize particularly complex datasets.
- Use measured data for statistical testing, corrected data for visual comparison of data and reduced data for other downstream analysis based on finding the underlying biological data manifold.
- We recommend clustering by Louvain community detection on a single-cell KNN graph.
- Clustering does not have to be performed at a single resolution. Subclustering particular cell clusters is a valid approach to focus on more detailed substructures in a dataset.
- Do not use marker gene P-values to validate a cell-identity cluster, especially when the detected marker genes do not help to annotate the community. P-values may be inflated.
- Note that marker genes for the same cell-identity cluster may differ between datasets purely due to dataset cell type and state compositions.
- If relevant reference atlases exist, we recommend using automated cluster annotation combined with data-derived marker-gene-based manual annotation to annotate clusters.
- Consider that statistical tests over changes in the proportion of a cell-identity cluster between samples are dependent on one another.
- Inferred trajectories do not have to represent a biological process. Further sources of evidence should be collected to interpret a trajectory.
- DE testing should not be performed on corrected data (denoised, batch corrected, etc.), but instead on measured data with technical covariates included in the model.
- Users should not rely on DE testing tools to correct models with confounded covariates. Model specification should be performed carefully ensuring a full-rank design matrix.
- We recommend using MAST or limma for DE testing.
- Users should be wary of uncertainty in the inferred regulatory relationships. Modules of genes that are enriched for regulatory relationships will be more reliable than individual edges.

@luecken2019current

**Best practices for single-cell analysis across modalities**

@heumos2023best

**What information should be included in an scRNA-Seq publication?**

@fullgrabe2020guidelines

## Experimental design {#sc-exp-design}

**Experimental Considerations for Single-Cell RNA Sequencing Approaches**

![Overview of step-wise approach to designing single-cell analysis workflows. RNA integrity number (RIN); Reads per cell (RPC).](https://www.frontiersin.org/files/Articles/391125/fcell-06-00108-HTML/image_m/fcell-06-00108-g001.jpg)

@nguyen2018experimental

**How many reads are needed per cell? Sequencing depth?**

> Given a fixed budget, sequencing as many cells as possible at approximately one read per cell per gene is optimal, both theoretically and experimentally.

@zhang2020determining

### Batch design, number of cells

**Avoid technical biases.**

![Experimental design examples. In the confounded design, cells are isolated from each sample onto separate plates, processed at potentially different times and the two groups (indicated by different colors) are sequenced on separate lanes of the sequencer. In the balanced design on the right, all samples are evenly distributed across all stages of the experiment, thus reducing the sources of technical variation in the experiment.](assets/baran-2018-1.webp)

**Deciding appropriate cell numbers**

![Estimate of cells required for experiments with various parameters. (A) The plot shows the log10(#Cells) required to capture at least 50 cell types based on the parameters on the X- and Y-axes. (B) The plot shows the log10(#Cells) required to capture the number of cells on the Y-axis if the population consists of 20 cell types.](assets/baran-2018-2.webp)

@baran2018experimental

- [{{< fa toolbox >}} SatijaLab Cells Calculator](https://satijalab.org/howmanycells/)
- [{{< fa toolbox >}} powsimR (R)](https://github.com/bvieth/powsimR)

### Sequencing depth

> While 250 000 reads per cell are sufficient for accuracy, 1 million reads per cell were a good target for saturated gene detection.

@svensson2017power

- [{{< fa toolbox >}} Compare 10X QC reports](https://10xqc.com/)
- SatijaLab [{{< fa toolbox >}} Cost Per Cell Calculator](https://satijalab.org/costpercell/)

## Mapping and Quantification

### CellRanger

- Process chromium data
- BCL to FASTQ
- FASTQ to cellxgene counts
- Feature barcoding

- [{{< fa toolbox >}} CellRanger](https://support.10xgenomics.com/single-cell-gene-expression/software/pipelines/latest/what-is-cell-ranger)

### Kallisto Bustools

- 10x, inDrop and Dropseq
- Generate cellxgene, cellxtranscript matrix
- RNA velocity data
- Feature barcoding
- QC reports

- [{{< fa toolbox >}} BUSTools](https://bustools.github.io/)

@melsted2019modular

### Salmon Alevin

- Drop-seq, 10x-Chromium v1/2/3, inDropV2, CELSeq 1/2, Quartz-Seq2, sci-RNA-seq3
- Generate cellxgene matrix
- [{{< fa toolbox >}} Alevin](https://salmon.readthedocs.io/en/latest/alevin.html)

### Nextflow nf-core rnaseq

- Bulk RNA-Seq, SMART-Seq
- QC, trimming, UMI demultiplexing, mapping, quantification
- cellxgene matrix
- [{{< fa toolbox >}} nf-core scrnaseq](https://nf-co.re/scrnaseq)

## Background correction

Identification and correction for free RNA background contamination in single-cell RNA-seq data.

![Accuracy of computational background noise estimation. A Estimated background noise levels per cell based on genetic variants (gray) and different computational tools. B Taking the genotype-based estimates as ground truth, Root Mean Squared Logarithmic Error (RMSLE) and Kendall rank correlation serve as evaluation metrics for cell-wise background noise estimates of different methods. Low RMSLE values indicate high similarity between estimated values and the assumed ground truth. High values of Kendallâ€™s correspond to good representation of cell to cell variability in the estimated values](janssen-2023-1.webp)

@janssen2023

**Tools**

- [{{< fa toolbox >}} SoupX](https://github.com/constantAmateur/SoupX) (R)
- [{{< fa toolbox >}} decontX](https://www.bioconductor.org/packages/release/bioc/html/decontX.html) (R)
- [{{< fa toolbox >}} CellBender](https://github.com/broadinstitute/CellBender) (Python)

CellBender is slow when using CPU.

## Doublet detection

![Summary of doublet detection tools.](https://ars.els-cdn.com/content/image/1-s2.0-S2405471220304592-gr5.jpg)

The methods include doubletCells, Scrublet, cxds, bcds, hybrid, Solo, DoubletDetection, DoubletFinder, and DoubletDecon. Evaluation was conducted using 16 real scRNA-seq datasets with experimentally annotated doublets and 112 synthetic datasets.

- **Evaluation Metrics**
  - Detection Accuracy: Assessed using the area under the precision-recall curve (AUPRC) and the area under the receiver operating characteristic curve (AUROC).
  - Impact on Downstream Analyses: Effects on differential expression (DE) gene analysis, highly variable gene identification, cell clustering, and cell trajectory inference.
  - Computational Efficiency: Considered aspects such as speed, scalability, stability, and usability.
- **Key Findings**
  - Detection Accuracy: DoubletFinder achieved the highest detection accuracy among the methods.
  - Downstream Analyses: Removal of doublets generally improved the accuracy of downstream analyses, with varying degrees of improvement depending on the method.
  - Computational Efficiency: cxds was found to be the most computationally efficient method, particularly excelling in speed and scalability.
- **Performance Factors**
  - Doublet Rate: Higher doublet rates improved the accuracy of all methods.
  - Sequencing Depth: Greater sequencing depth led to better performance.
  - Number of Cell Types: More cell types generally resulted in better detection accuracy, except for cxds, bcds, and hybrid methods.
  - Cell-Type Heterogeneity: Higher heterogeneity between cell types improved the detection accuracy for most methods.

Overall Conclusion: DoubletFinder is recommended for its high detection accuracy and significant improvement in downstream analyses, while cxds is highlighted for its computational efficiency.

@xi2021benchmarking

Doublet rate in [10X GEM platform](https://kb.10xgenomics.com/hc/en-us/articles/360001378811-What-is-the-maximum-number-of-cells-that-can-be-profiled).

::: {.content-hidden}

```
library(ggplot2)
library(dplyr)

dfr <- data.frame(
  rate = c(0.4, 0.8, 1.6, 2.4, 3.2, 4.0, 4.8, 5.6, 6.4, 7.2, 8.0),
  cells_loaded = c(825, 1650, 3300, 4950, 6600, 8250, 9900, 11550, 13200, 14850, 16500),
  cells_recovered = c(500, 1000, 2000, 3000, 4000, 5000, 6000, 7000, 8000, 9000, 10000)
) %>%
  mutate(doublets_by_count = cells_loaded - cells_recovered) %>%
  mutate(doublets_by_rate = (rate / 100 * cells_loaded)) %>%
  mutate(estimated_rate = round(100 - ((cells_recovered / cells_loaded) * 100)))

ggplot(dfr, aes(cells_loaded, cells_recovered)) +
  geom_point() +
  geom_smooth(method = "lm")
```

:::

| rate| cells_loaded| cells_recovered|
|----:|------------:|---------------:|
|  0.4|          825|             500|
|  0.8|         1650|            1000|
|  1.6|         3300|            2000|
|  2.4|         4950|            3000|
|  3.2|         6600|            4000|
|  4.0|         8250|            5000|
|  4.8|         9900|            6000|
|  5.6|        11550|            7000|
|  6.4|        13200|            8000|
|  7.2|        14850|            9000|
|  8.0|        16500|           10000|

## Cell type prediction

![Performance comparison of supervised classifiers for cell identification using different scRNA-seq datasets. Heatmap of the a median F1-scores and b percentage of unlabeled cells across all cell populations per classifier (rows) per dataset (columns). Gray boxes indicate that the corresponding method could not be tested on the corresponding dataset.](assets/abdelaal-2019-1.webp)

@abdelaal2019comparison

Identification of cell types can be completely automated (by comparing to reference data/databases) or semi-automated (reference data + marker genes).

![Summary of performance of the automatic cell-type identification methods. Bar graphs of the automatic cell-type identification methods with six evaluation criteria indicated. For each evaluation criteria, the length of the bars shows the performance of the automatic method: poor, median or good. The automatic methods are sorted based on the mean performance of the evaluation criteria. No bar: not evaluated.](https://ars.els-cdn.com/content/image/1-s2.0-S2001037021004499-gr5_lrg.jpg)

@xie2021automatic, @sun2022comprehensive

It is also important that cell types are labelled with the same labels across datasets and studies. It is useful to refer to a cell type ontology [Cell type ontology](https://cell-ontology.github.io/).

- [{{< fa toolbox >}} SCINA](https://github.com/jcao89757/SCINA) (R)
- [{{< fa toolbox >}} SingleR](https://bioconductor.org/packages/release/bioc/html/SingleR.html) (R)
- [{{< fa toolbox >}} scPred](https://github.com/powellgenomicslab/scPred) (R)
- [{{< fa toolbox >}} celltypist](https://github.com/Teichlab/celltypist) (Python)

## Differential expression

- Comparison of DGE tools for single-cell data

> All of the tools perform well when there is no multimodality or low levels of multimodality. They all also perform better when the sparsity (zero counts) is less. For data with a high level of multimodality, methods that consider the behavior of each individual gene, such as DESeq2, EMDomics, Monocle2, DEsingle, and SigEMD, show better TPRs. If the level of multimodality is low, however, SCDE, MAST, and edgeR can provide higher precision.

> In general, the methods that can capture multimodality (non-parametric methods), perform better than do the model-based methods designed for handling zero counts. However, a model-based method that can model the drop-out events well, can perform better in terms of true positive and false positive. We observed that methods developed specifically for scRNAseq data do not show significantly better performance compared to the methods designed for bulk RNAseq data; and methods that consider behavior of each individual gene (not all genes) in calling DE genes outperform the other tools.

![Effect of sample size (number of cells) on detecting DE genes. The sample size is in horizontal axis, from 10 to 400 cells in each condition. Effect of sample size on a TPR, b FPR, c accuracy (=(TPâ€‰+â€‰TN)/(TPâ€‰+â€‰FPâ€‰+â€‰TNâ€‰+â€‰FN)), and precision (=TP/(TPâ€‰+â€‰FP)). A threshold of 0.05 is used for FDR or adjusted p-value.](https://media.springernature.com/full/springer-static/image/art%3A10.1186%2Fs12859-019-2599-6/MediaObjects/12859_2019_2599_Fig7_HTML.png)

@wang2019comparative

- Differential expression without clustering or grouping
- [{{< fa toolbox >}} singleCellHaystack](https://github.com/alexisvdb/singleCellHaystack)

## Data Integration

- Single-cell data integration challenges

![Overview of common data integration methods classified according to their anchor choice.](assets/argelaguet-2021-tab1.webp)

![aâ€“c, Depending on the anchor choice, three types of data integration strategies can be considered: horizontal integration with features as the anchors (a), vertical integration with cells as the anchors (b) and diagonal integration with no anchors in high-dimensional space (c). The left column shows the data modalities extracted, while the right column illustrates the resulting data matrices to be integrated, depending on the anchor choice.](assets/argelaguet-2021-1.webp)

![Mosaic integration. a, Overview of an experimental design where different data modalities (each block in the rows) are profiled in different subsets of cells (each block in the columns). Transparent matrices denote missing information. b, Resulting data matrices after applying a mosaic integration approach aimed at imputing missing data modalities.](assets/argelaguet-2021-2.webp)

@argelaguet2021computational [{{< fa brands youtube >}} Principles and challenges of data integration by Argelaguet](https://www.youtube.com/watch?v=Kkv7fNgBJUY)

- Comparison of data integration methods

![a, Overview of top and bottom ranked methods by overall score for the human immune cell task. Metrics are divided into batch correction (blue) and bio-conservation (pink) categories. Overall scores are computed using a 40/60 weighted mean of these category scores (see Methods for further visualization details and Supplementary Fig. 2 for the full plot). b,c, Visualization of the four best performers on the human immune cell integration task colored by cell identity (b) and batch annotation (c). The plots show uniform manifold approximation and projection layouts for the unintegrated data (left) and the top four performers (right).](https://media.springernature.com/lw685/springer-static/image/art%3A10.1038%2Fs41592-021-01336-8/MediaObjects/41592_2021_1336_Fig2_HTML.png?as=webp)

![a, Scatter plot of the mean overall batch correction score against mean overall bio-conservation score for the selected methods on RNA tasks. Error bars indicate the standard error across tasks on which the methods ran. b, The overall scores for the best performing method, preprocessing and output combinations on each task as well as their usability and scalability. Methods that failed to run for a particular task were assigned the unintegrated ranking for that task. An asterisk after the method name (scANVI and scGen) indicates that, in addition, cell identity information was passed to this method. For ComBat and MNN, usability and scalability scores corresponding to the Python implementation of the methods are reported (Scanpy and mnnpy, respectively).](https://media.springernature.com/full/springer-static/image/art%3A10.1038%2Fs41592-021-01336-8/MediaObjects/41592_2021_1336_Fig3_HTML.png?as=webp)

@luecken2022benchmarking

![Qualitative evaluation of 14 batch-effect correction methods using UMAP visualization for dataset 9 of human cell atlas. The 14 methods are organized into two panels, with the top panel showing UMAP plots of raw data, Seurat 2, Seurat 3, Harmony, fastMNN, MNN Correct, ComBat, and limma outputs, while the bottom panel shows the UMAP plots of scGen, Scanorama, MMD-ResNet, ZINB-WaVE, scMerge, LIGER, and BBKNN outputs. Cells are colored by batch.](https://media.springernature.com/full/springer-static/image/art%3A10.1186%2Fs13059-019-1850-9/MediaObjects/13059_2019_1850_Fig18_HTML.png?as=webp)

> We tested 14 state-of-the-art batch correction algorithms designed to handle single-cell transcriptomic data. We found that each batch-effect removal method has its advantages and limitations, with no clearly superior method. Based on our results, we found LIGER, Harmony, and Seurat 3 to be the top batch mixing methods. Harmony performed well on datasets with common cell types, and also different technologies. The comparatively low runtime of Harmony also makes it suitable for initial data exploration of large datasets. Likewise, LIGER performed well, especially on datasets with non-identical cell types. The main drawback of LIGER is its longer runtime than Harmony, though it is acceptable for its performance. Seurat 3 is also able to handle large datasets, however with 20â€“50% longer runtime than LIGER. Due to its good batch mixing results with multiple batches, it is also recommended for such scenarios. To improve recovery of DEGs in batch-corrected data, we recommend scMerge for batch correction.

@tran2020benchmark

- [{{< fa toolbox >}} Seurat](https://satijalab.org/seurat/articles/integration_introduction.html) (R)
- [{{< fa toolbox >}} Harmony](https://github.com/immunogenomics/harmony) (R)
- [{{< fa toolbox >}} Liger](https://github.com/welch-lab/liger) (R)
- [{{< fa toolbox >}} FastMNN](https://github.com/LTLA/batchelor) (R)
- [{{< fa toolbox >}} Scanorama](https://scanpy.readthedocs.io/en/stable/generated/scanpy.external.pp.scanorama_integrate.html) (Python)
- [{{< fa toolbox >}} STACAS](https://github.com/carmonalab/STACAS) (R) @andreatta2024semi
- [{{< fa toolbox >}} scIntegrationMetrics](https://github.com/carmonalab/scIntegrationMetrics) (R) Metrics to evaluate batch effects and correction @andreatta2024semi
- [{{< fa toolbox >}} GLUE](https://github.com/gao-lab/GLUE) (R,Python) Diagonal integration

## Trajectory

::: {#fig-sc-trajectory-comparison layout-ncol="2"}

![](https://media.springernature.com/full/springer-static/image/art%3A10.1038%2Fs41587-019-0071-9/MediaObjects/41587_2019_71_Fig2_HTML.png?as=webp)

![](https://media.springernature.com/full/springer-static/image/art%3A10.1038%2Fs41587-019-0071-9/MediaObjects/41587_2019_71_Fig3_HTML.png?as=webp)

Comparison of Trajectory inference methods.

:::

@saelens2019comparison

- [{{< fa toolbox >}} Tempora](https://github.com/BaderLab/Tempora) Trajectory inference for time-series data

## Metacells

![](https://www.embopress.org/cms/10.1038/s44320-024-00045-6/asset/0950e5e3-eaf9-4448-9016-290de5c5ecc9/assets/graphic/44320_2024_45_fig1_html.png)

Metacells are defined as a partition of single-cell data into disjoint homogeneous groups of highly similar cells followed by aggregation of their profiles (Fig. 1). This concept relies on the assumption that most of the variability within metacells corresponds to technical noise and not to biologically relevant heterogeneity. As such, metacells aim at removing some of the noise while preserving the biological information of the single-cell data and improving interpretability.

- Choice of graining levels depends on both the complexity and size of the data
  - For large and low-complexity data, a relatively high graining level may be used.
  - For higher complexity or lower size, use lower graining levels to preserve the underlying heterogeneity
- Choose graining levels such that the resulting number of metacells is at least ten times larger than the expected number of cell subtypes.
- Somewhere between 10 and 50
- Optimal graining is hard to evaluate using measures such as modularity or silhouette coefficient
- Number of nearest neighbors
  - Increasing k results in a more uniform distribution of metacell sizes
  - Excessively large values of k (e.g., ~100) may lead to the merging of rare cell types
  - Reasonable range of values 5â€“30

Metrics

![](https://www.embopress.org/cms/10.1038/s44320-024-00045-6/asset/7a1aefbc-4b4f-448b-bb04-3e4581e83564/assets/graphic/44320_2024_45_fig3_html.png)

- Purity (m)
- Fraction of cells from the most abundant cell type in a metacell
- to check that metacells do not mix cells from different cell types

- Metacell compactness, is a measure of a metacell's homogeneity that helps flag low-quality metacells for review. Its value is dependent on the latent space used.
- SEACells and SuperCell using PCA space will perform better than MetaCell and MC2 which uses normalized gene space

- Separation: Euclidean distance between centroids of metacells
- There is also a clear relationship between separation and compactness. Better compactness results in worse separation and vice versa. Metacells from dense regions will have better compactness but worse separation, while metacells from sparse regions will have better separation but worse compactness.

- INV: mean normalized variance of features. Minimal is better
- INV should be proportional to its mean

- Size: Number of single cells per metacell
- To ensure balanced downstream analyses, it is better to have a more homogeneous metacell size distribution and avoid significant outliers

- Representativeness: A good metacell partition should reproduce the overall structure (i.e., manifold) of the single-cell data by uniformly representing its latent space
- a more uniform representativeness of the manifold leads to increased variation in metacell sizes to compensate for inherent over- and under-representation of different cell types.

- Conservation of downstream analysis
- Clustering assignment obtained at the metacell and single-cell levels can be compared using adjusted rand index (ARI) or adjusted mutual information (AMI).

- metacell concept is used to enhance signal for GRN construction

By aggregating information from several highly similar cells, metacells reduce the size of the dataset while preserving, and possibly even enhancing, the biological signal. This simultaneously addresses two main challenges of single-cell genomics data analysis: the large size of the single-cell data and its excessive sparsity.

Trade-off between topology-preserving downsampling (sketching) and imputation.

Limitations
- The metacell partition may be considered a very high-resolution clustering.
- metacells do not guarantee a global convergence.
- potentially group cells of distinct types within a single metacell (impure metacells)
- Artifacts can lead to misleading interpretations, including the presence of non-existing intermediate states or spurious gene co-expression
- rare cell types could be completely missed if entirely aggregated with a more abundant cell type into a single metacell.
- build metacells in a supervised manner by constructing metacells for each cell type separately

Adding cells per metacell as covariate

@bilous2024building

- [{{< fa toolbox >}} metacell](https://tanaylab.github.io/metacell/index.html) (R)
- [{{< fa toolbox >}} metacells](https://github.com/tanaylab/metacells/tree/master) (Python)
- [{{< fa toolbox >}} SuperCell](https://github.com/GfellerLab/SuperCell) (R)
- [{{< fa toolbox >}} SEACells](https://github.com/dpeerlab/SEACells) (Python)
- [{{< fa toolbox >}} MATK: Meta Cell Analysis Toolkit](https://github.com/GfellerLab/MetacellAnalysisToolkit) (Bash)

Gfeller Lab [tutorial](https://gfellerlab.github.io/MetacellAnalysisTutorial/index.html)

## Cell communication

Cell-cell communication and interaction.

Review of tools @almet2021landscape

## RNA velocity

## Databases

### Data

Single-cell data repositiories.

- [scRNASeqDB](https://bioinfo.uth.edu/scrnaseqdb/)
- [Broad SingleCell portal](https://singlecell.broadinstitute.org/single_cell)
- [Hemberg Lab collection](https://hemberg-lab.github.io/scRNA.seq.datasets/)
- [10x datasets](https://www.10xgenomics.com/resources/datasets)
- [EBI Cell Atlas](https://www.ebi.ac.uk/gxa/sc/home)
- [recount 2](https://jhubiostatistics.shinyapps.io/recount/)
- [JingleBells](https://jinglebells.bgu.ac.il/)
- [CNGB](https://db.cngb.org/cdcp/explore)
- [R TENxVisiumData](https://bioconductor.org/packages/release/data/experiment/vignettes/TENxVisiumData/inst/doc/vignette.html)

### Markers

Curated list of marker genes by organism, tissue and cell type.

- [PanglaoDB](https://panglaodb.se/)
- [CellMarker](http://biocc.hrbmu.edu.cn/CellMarker/browse.jsp)

## Interactive visualisation frameworks

- [{{< fa toolbox >}} ShinyCell](https://github.com/SGDDNB/ShinyCell)(R Shiny)
- [{{< fa toolbox >}} Cerebro](https://github.com/romanhaa/Cerebro)(R Shiny)
- [{{< fa toolbox >}} Vitessce](http://vitessce.io/)(R, Python)
- [{{< fa toolbox >}} CDCP](https://db.cngb.org/cdcp/)
- [{{< fa toolbox >}} SingleCellVR](https://singlecellvr.pinellolab.partners.org/)
- [{{< fa toolbox >}} Loupe](https://www.10xgenomics.com/support/software/loupe-browser/latest) 10X Loupe browser for CellRanger/Spaceranger outputs
- [{{< fa toolbox >}} LoupeR](https://github.com/10XGenomics/loupeR) Seurat to Loupe format. Supports only GEX assay.

![](https://github.com/SGDDNB/ShinyCell/raw/master/images/comparison.png)

@ouyang2021shinycell

![Overview of the visualization tools and their capabilities](assets/cakir-2020-1.webp)

@cakir2020comparison

## Learning

- [HBC Training](https://hbctraining.github.io/scRNA-seq_online/schedule/)
- [NBIS workshop](https://nbisweden.github.io/workshop-scRNAseq)
- [Seurat tutorials](https://satijalab.org/seurat/index.html)
- [DoubletFinder using Seurat tutorial](https://rpubs.com/kenneditodd/doublet_finder_example)

## References {.unnumbered}
