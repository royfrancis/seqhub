[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "SeqHub",
    "section": "",
    "text": "Home",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "index.html#home",
    "href": "index.html#home",
    "title": "SeqHub",
    "section": "",
    "text": "Bulk RNA-seq\nGene expression from bulk tissue material.\n\n\nSingle-cell RNA-seq\nGene expression from single cells. 10X chromium, Smart-seq etc.\n\n\nAIRR-Seq\nAIRR-Seq, Rep-Seq, Repertoire, VDJ and immune profiling.\n\n\nSpatial RNA-seq\nGene expression with spatial information. 10X Visium etc.\n\n\nATAC-Seq\nGenome wide chromatin accessibility.\n\n\nMeta transcriptomics\nGene expression from multiple/mixed populations or species.\n\n\n\n\n\nUpdated: 09-05-2025 at 09:58:44.",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "chapters/bulk/index.html",
    "href": "chapters/bulk/index.html",
    "title": "1  Bulk gene expression",
    "section": "",
    "text": "1.1 Overview\nWhat is the general workflow, steps, tools used and best practices for bulk rna-seq analysis?\nThe major analysis steps are listed above the lines for pre-analysis, core analysis and advanced analysis. The key analysis issues for each step that are listed below the lines are discussed in the text. a Preprocessing includes experimental design, sequencing design, and quality control steps. b Core analyses include transcriptome profiling, differential gene expression, and functional profiling. c Advanced analysis includes visualization, other RNA-seq technologies, and data integration. Abbreviations: ChIP-seq Chromatin immunoprecipitation sequencing, eQTL Expression quantitative loci, FPKM Fragments per kilobase of exon model per million mapped reads, GSEA Gene set enrichment analysis, PCA Principal component analysis, RPKM Reads per kilobase of exon model per million reads, sQTL Splicing quantitative trait loci, TF Transcription factor, TPM Transcripts per million.\nThree basic strategies for regular RNA-seq analysis. a An annotated genome is available and reads are mapped to the genome with a gapped mapper. Next (novel) transcript discovery and quantification can proceed with or without an annotation file. Novel transcripts are then functionally annotated. b If no novel transcript discovery is needed, reads can be mapped to the reference transcriptome using an ungapped aligner. Transcript identification and quantification can occur simultaneously. c When no genome is available, reads need to be assembled first into contigs or transcripts. For quantification, reads are mapped back to the novel reference transcriptome and further analysis proceeds as in (b) followed by the functional annotation of the novel transcripts as in (a). Representative software that can be used at each analysis step are indicated in bold text. Abbreviations: GFF General Feature Format, GTF gene transfer format, RSEM RNA-Seq by Expectation Maximization.\nConesa et al. (2016), Koch et al. (2018)",
    "crumbs": [
      "**Bulk RNASeq**",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Bulk gene expression</span>"
    ]
  },
  {
    "objectID": "chapters/bulk/index.html#bulk-overview",
    "href": "chapters/bulk/index.html#bulk-overview",
    "title": "1  Bulk gene expression",
    "section": "",
    "text": "A generic roadmap for RNA-seq computational analyses.\n\n\n\n\n\n\nRead mapping and transcript identification strategies.",
    "crumbs": [
      "**Bulk RNASeq**",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Bulk gene expression</span>"
    ]
  },
  {
    "objectID": "chapters/bulk/index.html#bulk-exp-design",
    "href": "chapters/bulk/index.html#bulk-exp-design",
    "title": "1  Bulk gene expression",
    "section": "1.2 Experimental design",
    "text": "1.2 Experimental design\nAre technical replicates needed for RNA-Seq analyses?\n\nWe find that the Illumina sequencing data are highly replicable, with relatively little technical variation, and thus, for many purposes, it may suffice to sequence each mRNA sample only once.\n\nMarioni et al. (2008)\nHow many biological replicates are needed in an RNA-seq experiment?\n\nSchurch et al. (2016)\nNumber of replicates can be calculated more precisely using power analysis. RnaSeqSampleSize is an R package for power analysis and sample size estimation for RNA-Seq experiment.\nZhao et al. (2018)\nRNASeqPower based spreadsheet (Google Sheet) and Shiny App.\nHart et al. (2013)\nMore sequencing depth or more biological replicates?\n\n\n\n(a) Increase in biological replication significantly increases the number of DE genes identified. Numbers of sequencing reads have a diminishing return after 10 M reads. Line thickness indicates depth of replication, with 2 replicates the darkest and 7 replicates the lightest. The lines are smoothed averages for each replication level, with the shaded regions corresponding to the 95% confidence intervals. (b) Power of detecting DE genes increases with both sequencing depth and biological replication. Similar to the trends in (a), increases in the power showed diminishing returns after 10 M reads. (c) ROC curves for three biological replicates. Sequencing deeper than 10 M reads did not significantly improve statistical power and precision for detecting DE genes. (d) The CV of logFC for the top 100 DE genes. The CV of the logFC estimates decreased significantly as we added more biological replicates, whereas adding sequencing depth after 10 M reads had much less effect.\n\n\n\n\n\n(a–c) The CV of logCPM for high expression level genes (a), medium expression level genes (b) and low expression level genes (c) (see Section 2 for definition). High/medium expression level genes have low CV for expression level estimates. Adding sequencing depth did not have significant effect on accuracy of estimation, whereas adding biological replicates improved accuracy significantly. For low expression level genes, both adding sequencing depth and adding biological replication level improved expression level estimation accuracy. (d) Number of DE genes plotted against the total estimated sequencing cost. If higher numbers of DE genes are needed, increased biological replication should be used.\n\n\nY. Liu et al. (2014)",
    "crumbs": [
      "**Bulk RNASeq**",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Bulk gene expression</span>"
    ]
  },
  {
    "objectID": "chapters/bulk/index.html#bulk-ext",
    "href": "chapters/bulk/index.html#bulk-ext",
    "title": "1  Bulk gene expression",
    "section": "1.3 RNA extraction",
    "text": "1.3 RNA extraction\nImpact of RNA degradation on transcript quantification\n\nWe observed widespread effects of RNA quality on measurements of gene expression levels, as well as a slight but significant loss of library complexity in more degraded samples.\nWhile standard normalizations failed to account for the effects of degradation, we found that by explicitly controlling for the effects of RIN using a linear model framework we can correct for the majority of these effects. We conclude that in instances in which RIN and the effect of interest are not associated, this approach can help recover biologically meaningful signals in data from degraded RNA samples.\n\n\n\n\nA) PCA plot of the 15 samples included in the study based on data from 29,156 genes with at least one mapped read in a single individual. Different colors identify different time-points, while each shape indicates a particular individual in the data set. B) Spearman correlation plot of the 15 samples in the study. PCA, principal component analysis.\n\n\nGallego Romero et al. (2014)\n\nOur current analyses indicate that structured small RNAs with low GC content are recovered inefficiently when a small number of cells is used for RNA isolation with TRIzol. We further find that, in addition to miRNAs, some pre-miRNAs, small interfering RNA (siRNA) duplexes, and transfer RNAs (tRNAs) are also extracted inefficiently under these conditions, reducing their representation in the pool of recovered RNAs.\n\nKim et al. (2012)",
    "crumbs": [
      "**Bulk RNASeq**",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Bulk gene expression</span>"
    ]
  },
  {
    "objectID": "chapters/bulk/index.html#bulk-lib-prep",
    "href": "chapters/bulk/index.html#bulk-lib-prep",
    "title": "1  Bulk gene expression",
    "section": "1.4 Library prep",
    "text": "1.4 Library prep\n\nAs many as 1751 genes in Gencode Release 19 were identified to be differentially expressed when comparing stranded and non-stranded RNA-seq whole blood samples. Antisense and pseudogenes were significantly enriched in differential expression analyses. Because stranded RNA-seq retains strand information of a read, we can resolve read ambiguity in overlapping genes transcribed from opposite strands, which provides a more accurate quantification of gene expression levels compared with traditional non-stranded RNA-seq.\nStranded RNA-seq provides a more accurate estimate of transcript expression compared with non-stranded RNA-seq, and is therefore the recommended RNA-seq approach for future mRNA-seq studies.\n\nZhao et al. (2015), Levin et al. (2010)",
    "crumbs": [
      "**Bulk RNASeq**",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Bulk gene expression</span>"
    ]
  },
  {
    "objectID": "chapters/bulk/index.html#bulk-seq",
    "href": "chapters/bulk/index.html#bulk-seq",
    "title": "1  Bulk gene expression",
    "section": "1.5 Sequencing",
    "text": "1.5 Sequencing\nChhangawala et al. (2015), Corley et al. (2017), Y. Liu et al. (2014)",
    "crumbs": [
      "**Bulk RNASeq**",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Bulk gene expression</span>"
    ]
  },
  {
    "objectID": "chapters/bulk/index.html#bulk-de-novo",
    "href": "chapters/bulk/index.html#bulk-de-novo",
    "title": "1  Bulk gene expression",
    "section": "1.6 De novo assembly",
    "text": "1.6 De novo assembly\nHsieh et al. (2019), Wang & Gribskov (2017)",
    "crumbs": [
      "**Bulk RNASeq**",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Bulk gene expression</span>"
    ]
  },
  {
    "objectID": "chapters/bulk/index.html#bulk-pcr",
    "href": "chapters/bulk/index.html#bulk-pcr",
    "title": "1  Bulk gene expression",
    "section": "1.7 PCR and deduplication",
    "text": "1.7 PCR and deduplication\nFu et al. (2018), Parekh et al. (2016), Klepikova et al. (2017)",
    "crumbs": [
      "**Bulk RNASeq**",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Bulk gene expression</span>"
    ]
  },
  {
    "objectID": "chapters/bulk/index.html#bulk-mapping",
    "href": "chapters/bulk/index.html#bulk-mapping",
    "title": "1  Bulk gene expression",
    "section": "1.8 Mapping",
    "text": "1.8 Mapping\nBaruzzo et al. (2017)",
    "crumbs": [
      "**Bulk RNASeq**",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Bulk gene expression</span>"
    ]
  },
  {
    "objectID": "chapters/bulk/index.html#bulk-norm",
    "href": "chapters/bulk/index.html#bulk-norm",
    "title": "1  Bulk gene expression",
    "section": "1.9 Normalisation",
    "text": "1.9 Normalisation\n\n\n\nComparison of normalization methods for real data. (A) Boxplots of log2(counts + 1) for all conditions and replicates in the M. musculus data, by normalization method. (B) Boxplots of intra-group variance for one of the conditions (labeled ‘B’ in the corresponding data found in Supplementary Data) in the M. musculus data, by normalization method. (C) Analysis of housekeeping genes for the H. sapiens data. (D) Consensus dendrogram of differential analysis results, using the DESeq Bioconductor package, for all normalization methods across the four datasets under consideration.\n\n\nDillies et al. (2013)\n\n\n\nOne highly expressed gene. An experiment is performed with conditions A and B to compare expression for the three genes (1, 2 and 3). (A) Gene 3 is 2-fold up-regulated under condition B, while the other genes are not DE; the quantity of mRNA/cell (in bp) is the same for genes 1 and 2, but is twice as high for gene 3 under condition B. (B) Because of the change in expression of gene 3, the shares of mRNA in the cell are different between conditions. Under condition A, each gene gets one-third, whereas under condition B, gene 3 gets half while the other two get one-fourth. (C) Differences in shares of mRNA are reflected in the shares of reads. Each sample has the same total number of reads, but the distribution is different between the conditions, matching the distribution of mRNA in (B). (D) When no normalization is performed, there are apparent differences in read counts for all three genes. Total count normalization produces the exact same result as no normalization at all, as the total read count for each sample is the same. In truth, there is no difference in expression for genes 1 and 2, and the relative count for gene 3 should be higher than found by no normalization or total count normalization. Correct normalization, therefore, makes the read counts of the non-DE genes equivalent, which also makes the relative expression of gene 3 correct. (E) No normalization and total count normalization fail to equilibrate the read counts of the non-DE genes, resulting in each gene appearing DE, and the truly DE gene (gene 3) having the wrong fold change. Correct normalization reveals no difference in expression for the non-DE genes and the correct fold change for gene 3.\n\n\n\n\n\nGlobal shift in expression. There are two genes, and an experiment is performed to compare expression between condition A and condition B. (A) There is global up-regulation under condition B versus condition A, with both genes having twice the expression under condition B. Within each condition, the two genes produce the same amount of mRNA/cell (measured in bp). (B) In the RNA-Seq experiment, the same number of molecules are sequenced from each of the two samples. Proportionally, the mRNA composition is the same under each condition, and so the composition of molecules sequenced is also the same. Within each condition, the two genes produce the same amount of mRNA (in bp) but gene 2 is four-fifth the length of gene 1, so must produce five-fourth the number of molecules that gene 1 does. (C) Sequenced reads are aligned to the reference genome and mapped to each gene. The distribution of reads is the same in each sample, but by chance the sample for condition A happens to have more reads in total. (D) Normalization is performed, which removes the differences in read count from technical variability, so the read count for each gene is the same across conditions. (E) Because the normalized read counts are the same, the observed fold change for each gene is 1, indicating no differential expression. However, genes are really twice as expressed under condition B and so in truth we should see half the expression when comparing A with B.\n\n\nEvans et al. (2018)\n\n1.9.1 Use of RPKM & TPM\nIssues with RPKM and suggestion for use of TPM.\nWagner et al. (2012)\n\nBelow is a suggested workflow to follow in order to compare RPKM or TPM values across samples. 1. Make sure both samples are sequenced using the same protocol in terms of strandedness. If not, samples cannot be compared. 2. Make sure both samples use the same RNA isolation approach (polyA+ selection vs ribosomal RNA depletion). If not, they should not be compared. 3. Check the fraction of the ribosomal, mitochondrial and globin RNAs, and the top highly expressed transcripts and see whether such RNAs constitute a very large part of the sequenced reads in a sample, and thus decrease the sequencing ‘real estate’ available for the remaining genes in that sample. If the calculated fractions in two samples differ significantly, do not compare RPKM or TPM values directly. TPM should never be used for quantitative comparisons across samples when the total RNA contents and its distributions are very different. However, under appropriate circumstances, TPM can be still useful for qualitative comparison such as PCA and clustering analysis.\n\nZhao et al. (2020)",
    "crumbs": [
      "**Bulk RNASeq**",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Bulk gene expression</span>"
    ]
  },
  {
    "objectID": "chapters/bulk/index.html#bulk-batch-effect",
    "href": "chapters/bulk/index.html#bulk-batch-effect",
    "title": "1  Bulk gene expression",
    "section": "1.10 Batch effect",
    "text": "1.10 Batch effect\nQ. Liu & Markatou (2016), Manimaran et al. (2016)",
    "crumbs": [
      "**Bulk RNASeq**",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Bulk gene expression</span>"
    ]
  },
  {
    "objectID": "chapters/bulk/index.html#bulk-dge",
    "href": "chapters/bulk/index.html#bulk-dge",
    "title": "1  Bulk gene expression",
    "section": "1.11 Differential gene expression",
    "text": "1.11 Differential gene expression\nWhich DE tool should you use?\n\n\nSchurch et al. (2016), Seyednasrollah et al. (2015)\n\n1.11.1 Modelling in R\n\nIf variable is a factor, then the two models with and without the intercept term are equivalent, but if variable is a covariate (continuous) the then two models are fundamentally different.\n\n\nIn general, we suggest the inclusion of an intercept term for modelling explanatory variables that are covariates (continuous) since it provides a more flexible fit to the data points.\n\nLaw et al. (2020), Soneson et al. (2020), Law et al. (2016)",
    "crumbs": [
      "**Bulk RNASeq**",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Bulk gene expression</span>"
    ]
  },
  {
    "objectID": "chapters/bulk/index.html#other",
    "href": "chapters/bulk/index.html#other",
    "title": "1  Bulk gene expression",
    "section": "1.12 Other",
    "text": "1.12 Other\nA benchmark for quantification pipelines\nTeng et al. (2016)",
    "crumbs": [
      "**Bulk RNASeq**",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Bulk gene expression</span>"
    ]
  },
  {
    "objectID": "chapters/bulk/index.html#reference-file-formats",
    "href": "chapters/bulk/index.html#reference-file-formats",
    "title": "1  Bulk gene expression",
    "section": "1.13 Reference & File formats",
    "text": "1.13 Reference & File formats\n\nIllumina read quality scores\nIllumina read name format\nGTF format\nSAM file format",
    "crumbs": [
      "**Bulk RNASeq**",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Bulk gene expression</span>"
    ]
  },
  {
    "objectID": "chapters/bulk/index.html#software",
    "href": "chapters/bulk/index.html#software",
    "title": "1  Bulk gene expression",
    "section": "1.14 Software",
    "text": "1.14 Software\n\n1.14.1 Reads and general QC\n\n FastQC\n MultiQC\n\n\n\n1.14.2 Aligners (Mapper)\n\n STAR\n hisat2\n\n\n\n1.14.3 Pseudoaligners\n\n Kallisto\n Salmon\n\n\n\n1.14.4 Aligned QC\nTools to assess post-alignment quality, ie; after mapping of reads to a reference.\n\n QoRTs\n RSeQC\n Qualimap\n\n\n\n1.14.5 Quantification\n\n featureCounts\n HTSeq\n RSEM\n\n\n\n1.14.6 Pipelines\n\n1.14.6.1 Nextflow nf-core rnaseq\n\nBulk RNA-Seq, SMART-Seq\nQC, trimming, UMI demultiplexing, mapping, quantification\ncellxgene matrix\n nf-core rnaseq\n\n\n\n\n1.14.7 Genome browsers\nInteractive exploration of BAM files, ie; reads aligned to a reference.\n\n IGV\n UCSC Genome browser\n SeqMonk\n\n\n\n1.14.8 Batch correction\n\n SVA\n PVCA\n BatchQC\n\n\n\n1.14.9 GSA/GSEA\n\nConvert gene IDs  gProfiler\nOSA/ORA Online  Enrichr\nOSA/ORA Online  GOrilla\nOSA/ORA Online  Panther\nORA/GSEA/NTA Online  Webgestalt\nORA/GSEA Online  DAVID\nKEGG pathways  KEGG\nFunctional annotation through orthology  eggNOGmapper\nORA/GSEA in R  clusterProfiler\nStandalone software  ErmineJ\nPlot genes on Kegg pathways in R  Pathview\nCytoscape plugin  ClueGO\nSemantic reduction of terms  ReviGO\n\n\n\n1.14.10 GUI\nGraphical User Interfaces for analysis of RNA-Seq data.\n\n Galaxy\n SeqMonk\n Qiagen CLC Genomics workbench\n Geneious",
    "crumbs": [
      "**Bulk RNASeq**",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Bulk gene expression</span>"
    ]
  },
  {
    "objectID": "chapters/bulk/index.html#courses-workshops-tutorials",
    "href": "chapters/bulk/index.html#courses-workshops-tutorials",
    "title": "1  Bulk gene expression",
    "section": "1.15 Courses, Workshops & Tutorials",
    "text": "1.15 Courses, Workshops & Tutorials\n\nUniversity of Cambridge workshop\nBioconductor RNA-Seq workflow in R rnaseqGene\nGriffith Lab RNA-Seq tutorial",
    "crumbs": [
      "**Bulk RNASeq**",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Bulk gene expression</span>"
    ]
  },
  {
    "objectID": "chapters/bulk/index.html#other-1",
    "href": "chapters/bulk/index.html#other-1",
    "title": "1  Bulk gene expression",
    "section": "1.16 Other",
    "text": "1.16 Other\nEstimating storage requirements for FASTQ files\n\n\nOne .fastq file for Single-End sequencing\n\n.fastq MB = Number of million reads x (60 + 2 x read length in bp)\n\nPaired-End sequencing produces 2 fastq files\n\n.fastq MB = Number of million reads x (60 + 2 x read length in bp) x 2\n\nIt is recommended to store .fastq files in a compressed format (ex: .gz), which makes the file approximately 4 times smaller.\n\n\nElixir (2022)",
    "crumbs": [
      "**Bulk RNASeq**",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Bulk gene expression</span>"
    ]
  },
  {
    "objectID": "chapters/bulk/index.html#references",
    "href": "chapters/bulk/index.html#references",
    "title": "1  Bulk gene expression",
    "section": "References",
    "text": "References\n\n\n\n\nBaruzzo, G., Hayer, K. E., Kim, E. J., Di Camillo, B., FitzGerald, G. A., & Grant, G. R. (2017). Simulation-based comprehensive benchmarking of RNA-seq aligners. Nature Methods, 14(2), 135–139.\n\n\nChhangawala, S., Rudy, G., Mason, C. E., & Rosenfeld, J. A. (2015). The impact of read length on quantification of differentially expressed genes and splice junction detection. Genome Biology, 16(1), 1–10.\n\n\nConesa, A., Madrigal, P., Tarazona, S., Gomez-Cabrero, D., Cervera, A., McPherson, A., Szcześniak, M. W., Gaffney, D. J., Elo, L. L., Zhang, X., et al. (2016). A survey of best practices for RNA-seq data analysis. Genome Biology, 17(1), 1–19. https://link.springer.com/article/10.1186/s13059-016-0881-8\n\n\nCorley, S. M., MacKenzie, K. L., Beverdam, A., Roddam, L. F., & Wilkins, M. R. (2017). Differentially expressed genes from RNA-seq and functional enrichment results are affected by the choice of single-end versus paired-end reads and stranded versus non-stranded protocols. BMC Genomics, 18(1), 1–13.\n\n\nDillies, M.-A., Rau, A., Aubert, J., Hennequet-Antier, C., Jeanmougin, M., Servant, N., Keime, C., Marot, G., Castel, D., Estelle, J., et al. (2013). A comprehensive evaluation of normalization methods for illumina high-throughput RNA sequencing data analysis. Briefings in Bioinformatics, 14(6), 671–683.\n\n\nElixir. (2022). Data volume. https://rdm.elixir-belgium.org/data_volume.html\n\n\nEvans, C., Hardin, J., & Stoebel, D. M. (2018). Selecting between-sample RNA-seq normalization methods from the perspective of their assumptions. Briefings in Bioinformatics, 19(5), 776–792.\n\n\nFu, Y., Wu, P.-H., Beane, T., Zamore, P. D., & Weng, Z. (2018). Elimination of PCR duplicates in RNA-seq and small RNA-seq using unique molecular identifiers. Bmc Genomics, 19, 1–14.\n\n\nGallego Romero, I., Pai, A. A., Tung, J., & Gilad, Y. (2014). RNA-seq: Impact of RNA degradation on transcript quantification. BMC Biology, 12(1), 1–13.\n\n\nHart, S. N., Therneau, T. M., Zhang, Y., Poland, G. A., & Kocher, J.-P. (2013). Calculating sample size estimates for RNA sequencing data. Journal of Computational Biology, 20(12), 970–978.\n\n\nHsieh, P.-H., Oyang, Y.-J., & Chen, C.-Y. (2019). Effect of de novo transcriptome assembly on transcript quantification. Scientific Reports, 9(1), 8304.\n\n\nKim, Y.-K., Yeo, J., Kim, B., Ha, M., & Kim, V. N. (2012). Short structured RNAs with low GC content are selectively lost during extraction from a small number of cells. Molecular Cell, 46(6), 893–895.\n\n\nKlepikova, A. V., Kasianov, A. S., Chesnokov, M. S., Lazarevich, N. L., Penin, A. A., & Logacheva, M. (2017). Effect of method of deduplication on estimation of differential gene expression using RNA-seq. PeerJ, 5, e3091.\n\n\nKoch, C. M., Chiu, S. F., Akbarpour, M., Bharat, A., Ridge, K. M., Bartom, E. T., & Winter, D. R. (2018). A beginner’s guide to analysis of RNA sequencing data. American Journal of Respiratory Cell and Molecular Biology, 59(2), 145–157. https://www.atsjournals.org/doi/full/10.1165/rcmb.2017-0430TR\n\n\nLaw, C. W., Alhamdoosh, M., Su, S., Smyth, G. K., & Ritchie, M. E. (2016). RNA-seq analysis is easy as 1-2-3 with limma, glimma and edgeR. F1000Research, 5.\n\n\nLaw, C. W., Zeglinski, K., Dong, X., Alhamdoosh, M., Smyth, G. K., & Ritchie, M. E. (2020). A guide to creating design matrices for gene expression experiments. F1000Research, 9.\n\n\nLevin, J. Z., Yassour, M., Adiconis, X., Nusbaum, C., Thompson, D. A., Friedman, N., Gnirke, A., & Regev, A. (2010). Comprehensive comparative analysis of strand-specific RNA sequencing methods. Nature Methods, 7(9), 709–715.\n\n\nLiu, Q., & Markatou, M. (2016). Evaluation of methods in removing batch effects on RNA-seq data. Infect Dis Transl Med, 2(1), 3–9.\n\n\nLiu, Y., Zhou, J., & White, K. P. (2014). RNA-seq differential expression studies: More sequence or more replication? Bioinformatics, 30(3), 301–304.\n\n\nManimaran, S., Selby, H. M., Okrah, K., Ruberman, C., Leek, J. T., Quackenbush, J., Haibe-Kains, B., Bravo, H. C., & Johnson, W. E. (2016). BatchQC: Interactive software for evaluating sample and batch effects in genomic data. Bioinformatics, 32(24), 3836–3838.\n\n\nMarioni, J. C., Mason, C. E., Mane, S. M., Stephens, M., & Gilad, Y. (2008). RNA-seq: An assessment of technical reproducibility and comparison with gene expression arrays. Genome Research, 18(9), 1509–1517. https://genome.cshlp.org/content/18/9/1509\n\n\nParekh, S., Ziegenhain, C., Vieth, B., Enard, W., & Hellmann, I. (2016). The impact of amplification on differential expression analyses by RNA-seq. Scientific Reports, 6(1), 25533.\n\n\nSchurch, N. J., Schofield, P., Gierliński, M., Cole, C., Sherstnev, A., Singh, V., Wrobel, N., Gharbi, K., Simpson, G. G., Owen-Hughes, T., et al. (2016). How many biological replicates are needed in an RNA-seq experiment and which differential expression tool should you use? Rna, 22(6), 839–851.\n\n\nSeyednasrollah, F., Laiho, A., & Elo, L. L. (2015). Comparison of software packages for detecting differential expression in RNA-seq studies. Briefings in Bioinformatics, 16(1), 59–70.\n\n\nSoneson, C., Marini, F., Geier, F., Love, M. I., & Stadler, M. B. (2020). ExploreModelMatrix: Interactive exploration for improved understanding of design matrices and linear models in r. F1000Research, 9(512), 512.\n\n\nTeng, M., Love, M. I., Davis, C. A., Djebali, S., Dobin, A., Graveley, B. R., Li, S., Mason, C. E., Olson, S., Pervouchine, D., et al. (2016). A benchmark for RNA-seq quantification pipelines. Genome Biology, 17(1), 1–12.\n\n\nWagner, G. P., Kin, K., & Lynch, V. J. (2012). Measurement of mRNA abundance using RNA-seq data: RPKM measure is inconsistent among samples. Theory in Biosciences, 131, 281–285.\n\n\nWang, S., & Gribskov, M. (2017). Comprehensive evaluation of de novo transcriptome assembly programs and their effects on differential gene expression analysis. Bioinformatics, 33(3), 327–333.\n\n\nZhao, S., Li, C.-I., Guo, Y., Sheng, Q., & Shyr, Y. (2018). RnaSeqSampleSize: Real data based sample size estimation for RNA sequencing. BMC Bioinformatics, 19(1), 1–8.\n\n\nZhao, S., Ye, Z., & Stanton, R. (2020). Misuse of RPKM or TPM normalization when comparing across samples and sequencing protocols. Rna, 26(8), 903–909.\n\n\nZhao, S., Zhang, Y., Gordon, W., Quan, J., Xi, H., Du, S., Schack, D. von, & Zhang, B. (2015). Comparison of stranded and non-stranded RNA-seq transcriptome profiling and investigation of gene overlap. BMC Genomics, 16(1), 1–14.",
    "crumbs": [
      "**Bulk RNASeq**",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Bulk gene expression</span>"
    ]
  },
  {
    "objectID": "chapters/sc/index.html",
    "href": "chapters/sc/index.html",
    "title": "2  Gene expression",
    "section": "",
    "text": "2.1 Overview\nCurrent best practices in scRNA-Seq\nLuecken & Theis (2019)\nBest practices for single-cell analysis across modalities\nHeumos et al. (2023)\nWhat information should be included in an scRNA-Seq publication?\nFüllgrabe et al. (2020)",
    "crumbs": [
      "**Single Cell RNASeq**",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Gene expression</span>"
    ]
  },
  {
    "objectID": "chapters/sc/index.html#sc-overview",
    "href": "chapters/sc/index.html#sc-overview",
    "title": "2  Gene expression",
    "section": "",
    "text": "Perform QC by finding outlier peaks in the number of genes, the count depth and the fraction of mitochondrial reads. Consider these covariates jointly instead of separately.\nBe as permissive of QC thresholding as possible, and revisit QC if downstream clustering cannot be interpreted.\nIf the distribution of QC covariates differ between samples, QC thresholds should be determined separately for each sample to account for sample quality differences\nWe recommend scran for normalization of non-full-length datasets. An alternative is to evaluate normalization approaches via scone especially for plate-based datasets. Full-length scRNA-seq protocols can be corrected for gene length using bulk methods.\nThere is no consensus on scaling genes to 0 mean and unit variance. We prefer not to scale gene expression.\nNormalized data should be log(x+1)-transformed for use with downstream analysis methods that assume data are normally distributed.\nRegress out biological covariates only for trajectory inference and if other biological processes of interest are not masked by the regressed out biological covariate.\nRegress out technical and biological covariates jointly rather than serially.\nPlate-based dataset pre-processing may require regressing out counts, normalization via non-linear normalization methods or downsampling.\nWe recommend performing batch correction via ComBat when cell type and state compositions between batches are consistent\nData integration and batch correction should be performed by different methods. Data integration tools may over-correct simple batch effects.\nUsers should be cautious of signals found only after expression recovery. Exploratory analysis may be best performed without this step.\nWe recommend selecting between 1,000 and 5,000 highly variable genes depending on dataset complexity.\nFeature selection methods that use gene expression means and variances cannot be used when gene expression values have been normalized to zero mean and unit variance, or when residuals from model fitting are used as normalized expression values. Thus, one must consider what pre-processing to perform before selecting HVGs.\nDimensionality reduction methods should be considered separately for summarization and visualization.\nWe recommend UMAP for exploratory visualization; PCA for general purpose summarization; and diffusion maps as an alternative to PCA for trajectory inference summarization.\nPAGA with UMAP is a suitable alternative to visualize particularly complex datasets.\nUse measured data for statistical testing, corrected data for visual comparison of data and reduced data for other downstream analysis based on finding the underlying biological data manifold.\nWe recommend clustering by Louvain community detection on a single-cell KNN graph.\nClustering does not have to be performed at a single resolution. Subclustering particular cell clusters is a valid approach to focus on more detailed substructures in a dataset.\nDo not use marker gene P-values to validate a cell-identity cluster, especially when the detected marker genes do not help to annotate the community. P-values may be inflated.\nNote that marker genes for the same cell-identity cluster may differ between datasets purely due to dataset cell type and state compositions.\nIf relevant reference atlases exist, we recommend using automated cluster annotation combined with data-derived marker-gene-based manual annotation to annotate clusters.\nConsider that statistical tests over changes in the proportion of a cell-identity cluster between samples are dependent on one another.\nInferred trajectories do not have to represent a biological process. Further sources of evidence should be collected to interpret a trajectory.\nDE testing should not be performed on corrected data (denoised, batch corrected, etc.), but instead on measured data with technical covariates included in the model.\nUsers should not rely on DE testing tools to correct models with confounded covariates. Model specification should be performed carefully ensuring a full-rank design matrix.\nWe recommend using MAST or limma for DE testing.\nUsers should be wary of uncertainty in the inferred regulatory relationships. Modules of genes that are enriched for regulatory relationships will be more reliable than individual edges.",
    "crumbs": [
      "**Single Cell RNASeq**",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Gene expression</span>"
    ]
  },
  {
    "objectID": "chapters/sc/index.html#sc-exp-design",
    "href": "chapters/sc/index.html#sc-exp-design",
    "title": "2  Gene expression",
    "section": "2.2 Experimental design",
    "text": "2.2 Experimental design\nExperimental Considerations for Single-Cell RNA Sequencing Approaches\n\n\n\nOverview of step-wise approach to designing single-cell analysis workflows. RNA integrity number (RIN); Reads per cell (RPC).\n\n\nNguyen et al. (2018)\nHow many reads are needed per cell? Sequencing depth?\n\nGiven a fixed budget, sequencing as many cells as possible at approximately one read per cell per gene is optimal, both theoretically and experimentally.\n\nZhang et al. (2020)\n\n2.2.1 Batch design, number of cells\nAvoid technical biases.\n\n\n\nExperimental design examples. In the confounded design, cells are isolated from each sample onto separate plates, processed at potentially different times and the two groups (indicated by different colors) are sequenced on separate lanes of the sequencer. In the balanced design on the right, all samples are evenly distributed across all stages of the experiment, thus reducing the sources of technical variation in the experiment.\n\n\nDeciding appropriate cell numbers\n\n\n\nEstimate of cells required for experiments with various parameters. (A) The plot shows the log10(#Cells) required to capture at least 50 cell types based on the parameters on the X- and Y-axes. (B) The plot shows the log10(#Cells) required to capture the number of cells on the Y-axis if the population consists of 20 cell types.\n\n\nBaran-Gale et al. (2018)\n\n SatijaLab Cells Calculator\n powsimR (R)\n\n\n\n2.2.2 Sequencing depth\n\nWhile 250 000 reads per cell are sufficient for accuracy, 1 million reads per cell were a good target for saturated gene detection.\n\nSvensson et al. (2017)\n\n Compare 10X QC reports\nSatijaLab  Cost Per Cell Calculator",
    "crumbs": [
      "**Single Cell RNASeq**",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Gene expression</span>"
    ]
  },
  {
    "objectID": "chapters/sc/index.html#mapping-and-quantification",
    "href": "chapters/sc/index.html#mapping-and-quantification",
    "title": "2  Gene expression",
    "section": "2.3 Mapping and Quantification",
    "text": "2.3 Mapping and Quantification\n\n2.3.1 CellRanger\n\nProcess chromium data\nBCL to FASTQ\nFASTQ to cellxgene counts\nFeature barcoding\n CellRanger\n\n\n\n2.3.2 Kallisto Bustools\n\n10x, inDrop and Dropseq\nGenerate cellxgene, cellxtranscript matrix\nRNA velocity data\nFeature barcoding\nQC reports\n BUSTools\n\nMelsted et al. (2019)\n\n\n2.3.3 Salmon Alevin\n\nDrop-seq, 10x-Chromium v1/2/3, inDropV2, CELSeq 1/2, Quartz-Seq2, sci-RNA-seq3\nGenerate cellxgene matrix\n Alevin\n\n\n\n2.3.4 Nextflow nf-core rnaseq\n\nBulk RNA-Seq, SMART-Seq\nQC, trimming, UMI demultiplexing, mapping, quantification\ncellxgene matrix\n nf-core scrnaseq",
    "crumbs": [
      "**Single Cell RNASeq**",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Gene expression</span>"
    ]
  },
  {
    "objectID": "chapters/sc/index.html#background-correction",
    "href": "chapters/sc/index.html#background-correction",
    "title": "2  Gene expression",
    "section": "2.4 Background correction",
    "text": "2.4 Background correction\nIdentification and correction for free RNA background contamination in single-cell RNA-seq data.\n\n\n\nAccuracy of computational background noise estimation. A Estimated background noise levels per cell based on genetic variants (gray) and different computational tools. B Taking the genotype-based estimates as ground truth, Root Mean Squared Logarithmic Error (RMSLE) and Kendall rank correlation serve as evaluation metrics for cell-wise background noise estimates of different methods. Low RMSLE values indicate high similarity between estimated values and the assumed ground truth. High values of Kendall’s correspond to good representation of cell to cell variability in the estimated values\n\n\n(janssen2023?)\nTools\n\n SoupX (R)\n decontX (R)\n CellBender (Python)\n\nCellBender is slow when using CPU.",
    "crumbs": [
      "**Single Cell RNASeq**",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Gene expression</span>"
    ]
  },
  {
    "objectID": "chapters/sc/index.html#doublet-detection",
    "href": "chapters/sc/index.html#doublet-detection",
    "title": "2  Gene expression",
    "section": "2.5 Doublet detection",
    "text": "2.5 Doublet detection\n\n\n\nSummary of doublet detection tools.\n\n\nThe methods include doubletCells, Scrublet, cxds, bcds, hybrid, Solo, DoubletDetection, DoubletFinder, and DoubletDecon. Evaluation was conducted using 16 real scRNA-seq datasets with experimentally annotated doublets and 112 synthetic datasets.\n\nEvaluation Metrics\n\nDetection Accuracy: Assessed using the area under the precision-recall curve (AUPRC) and the area under the receiver operating characteristic curve (AUROC).\nImpact on Downstream Analyses: Effects on differential expression (DE) gene analysis, highly variable gene identification, cell clustering, and cell trajectory inference.\nComputational Efficiency: Considered aspects such as speed, scalability, stability, and usability.\n\nKey Findings\n\nDetection Accuracy: DoubletFinder achieved the highest detection accuracy among the methods.\nDownstream Analyses: Removal of doublets generally improved the accuracy of downstream analyses, with varying degrees of improvement depending on the method.\nComputational Efficiency: cxds was found to be the most computationally efficient method, particularly excelling in speed and scalability.\n\nPerformance Factors\n\nDoublet Rate: Higher doublet rates improved the accuracy of all methods.\nSequencing Depth: Greater sequencing depth led to better performance.\nNumber of Cell Types: More cell types generally resulted in better detection accuracy, except for cxds, bcds, and hybrid methods.\nCell-Type Heterogeneity: Higher heterogeneity between cell types improved the detection accuracy for most methods.\n\n\nOverall Conclusion: DoubletFinder is recommended for its high detection accuracy and significant improvement in downstream analyses, while cxds is highlighted for its computational efficiency.\nXi & Li (2021)\nDoublet rate in 10X GEM platform.\n\n\n\nrate\ncells_loaded\ncells_recovered\n\n\n\n\n0.4\n825\n500\n\n\n0.8\n1650\n1000\n\n\n1.6\n3300\n2000\n\n\n2.4\n4950\n3000\n\n\n3.2\n6600\n4000\n\n\n4.0\n8250\n5000\n\n\n4.8\n9900\n6000\n\n\n5.6\n11550\n7000\n\n\n6.4\n13200\n8000\n\n\n7.2\n14850\n9000\n\n\n8.0\n16500\n10000",
    "crumbs": [
      "**Single Cell RNASeq**",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Gene expression</span>"
    ]
  },
  {
    "objectID": "chapters/sc/index.html#cell-type-prediction",
    "href": "chapters/sc/index.html#cell-type-prediction",
    "title": "2  Gene expression",
    "section": "2.6 Cell type prediction",
    "text": "2.6 Cell type prediction\n\n\n\nPerformance comparison of supervised classifiers for cell identification using different scRNA-seq datasets. Heatmap of the a median F1-scores and b percentage of unlabeled cells across all cell populations per classifier (rows) per dataset (columns). Gray boxes indicate that the corresponding method could not be tested on the corresponding dataset.\n\n\nAbdelaal et al. (2019)\nIdentification of cell types can be completely automated (by comparing to reference data/databases) or semi-automated (reference data + marker genes).\n\n\n\nSummary of performance of the automatic cell-type identification methods. Bar graphs of the automatic cell-type identification methods with six evaluation criteria indicated. For each evaluation criteria, the length of the bars shows the performance of the automatic method: poor, median or good. The automatic methods are sorted based on the mean performance of the evaluation criteria. No bar: not evaluated.\n\n\nXie et al. (2021), Sun et al. (2022)\nIt is also important that cell types are labelled with the same labels across datasets and studies. It is useful to refer to a cell type ontology Cell type ontology.\n\n SCINA (R)\n SingleR (R)\n scPred (R)\n celltypist (Python)",
    "crumbs": [
      "**Single Cell RNASeq**",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Gene expression</span>"
    ]
  },
  {
    "objectID": "chapters/sc/index.html#differential-expression",
    "href": "chapters/sc/index.html#differential-expression",
    "title": "2  Gene expression",
    "section": "2.7 Differential expression",
    "text": "2.7 Differential expression\n\nComparison of DGE tools for single-cell data\n\n\nAll of the tools perform well when there is no multimodality or low levels of multimodality. They all also perform better when the sparsity (zero counts) is less. For data with a high level of multimodality, methods that consider the behavior of each individual gene, such as DESeq2, EMDomics, Monocle2, DEsingle, and SigEMD, show better TPRs. If the level of multimodality is low, however, SCDE, MAST, and edgeR can provide higher precision.\n\n\nIn general, the methods that can capture multimodality (non-parametric methods), perform better than do the model-based methods designed for handling zero counts. However, a model-based method that can model the drop-out events well, can perform better in terms of true positive and false positive. We observed that methods developed specifically for scRNAseq data do not show significantly better performance compared to the methods designed for bulk RNAseq data; and methods that consider behavior of each individual gene (not all genes) in calling DE genes outperform the other tools.\n\n\n\n\nEffect of sample size (number of cells) on detecting DE genes. The sample size is in horizontal axis, from 10 to 400 cells in each condition. Effect of sample size on a TPR, b FPR, c accuracy (=(TP + TN)/(TP + FP + TN + FN)), and precision (=TP/(TP + FP)). A threshold of 0.05 is used for FDR or adjusted p-value.\n\n\nWang et al. (2019)\n\nDifferential expression without clustering or grouping\n singleCellHaystack",
    "crumbs": [
      "**Single Cell RNASeq**",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Gene expression</span>"
    ]
  },
  {
    "objectID": "chapters/sc/index.html#data-integration",
    "href": "chapters/sc/index.html#data-integration",
    "title": "2  Gene expression",
    "section": "2.8 Data Integration",
    "text": "2.8 Data Integration\n\nSingle-cell data integration challenges\n\n\n\n\nOverview of common data integration methods classified according to their anchor choice.\n\n\n\n\n\na–c, Depending on the anchor choice, three types of data integration strategies can be considered: horizontal integration with features as the anchors (a), vertical integration with cells as the anchors (b) and diagonal integration with no anchors in high-dimensional space (c). The left column shows the data modalities extracted, while the right column illustrates the resulting data matrices to be integrated, depending on the anchor choice.\n\n\n\n\n\nMosaic integration. a, Overview of an experimental design where different data modalities (each block in the rows) are profiled in different subsets of cells (each block in the columns). Transparent matrices denote missing information. b, Resulting data matrices after applying a mosaic integration approach aimed at imputing missing data modalities.\n\n\nArgelaguet et al. (2021)  Principles and challenges of data integration by Argelaguet\n\nComparison of data integration methods\n\n\n\n\na, Overview of top and bottom ranked methods by overall score for the human immune cell task. Metrics are divided into batch correction (blue) and bio-conservation (pink) categories. Overall scores are computed using a 40/60 weighted mean of these category scores (see Methods for further visualization details and Supplementary Fig. 2 for the full plot). b,c, Visualization of the four best performers on the human immune cell integration task colored by cell identity (b) and batch annotation (c). The plots show uniform manifold approximation and projection layouts for the unintegrated data (left) and the top four performers (right).\n\n\n\n\n\na, Scatter plot of the mean overall batch correction score against mean overall bio-conservation score for the selected methods on RNA tasks. Error bars indicate the standard error across tasks on which the methods ran. b, The overall scores for the best performing method, preprocessing and output combinations on each task as well as their usability and scalability. Methods that failed to run for a particular task were assigned the unintegrated ranking for that task. An asterisk after the method name (scANVI and scGen) indicates that, in addition, cell identity information was passed to this method. For ComBat and MNN, usability and scalability scores corresponding to the Python implementation of the methods are reported (Scanpy and mnnpy, respectively).\n\n\nLuecken et al. (2022)\n\n\n\nQualitative evaluation of 14 batch-effect correction methods using UMAP visualization for dataset 9 of human cell atlas. The 14 methods are organized into two panels, with the top panel showing UMAP plots of raw data, Seurat 2, Seurat 3, Harmony, fastMNN, MNN Correct, ComBat, and limma outputs, while the bottom panel shows the UMAP plots of scGen, Scanorama, MMD-ResNet, ZINB-WaVE, scMerge, LIGER, and BBKNN outputs. Cells are colored by batch.\n\n\n\nWe tested 14 state-of-the-art batch correction algorithms designed to handle single-cell transcriptomic data. We found that each batch-effect removal method has its advantages and limitations, with no clearly superior method. Based on our results, we found LIGER, Harmony, and Seurat 3 to be the top batch mixing methods. Harmony performed well on datasets with common cell types, and also different technologies. The comparatively low runtime of Harmony also makes it suitable for initial data exploration of large datasets. Likewise, LIGER performed well, especially on datasets with non-identical cell types. The main drawback of LIGER is its longer runtime than Harmony, though it is acceptable for its performance. Seurat 3 is also able to handle large datasets, however with 20–50% longer runtime than LIGER. Due to its good batch mixing results with multiple batches, it is also recommended for such scenarios. To improve recovery of DEGs in batch-corrected data, we recommend scMerge for batch correction.\n\nFeature selection methods affects the performance of integration. Zappia et al. (2025)\nTran et al. (2020)\n\n Seurat (R)\n Harmony (R)\n Liger (R)\n FastMNN (R)\n Scanorama (Python)\n STACAS (R) Andreatta et al. (2024)\n scIntegrationMetrics (R) Metrics to evaluate batch effects and correction Andreatta et al. (2024)\n GLUE (R,Python) Diagonal integration",
    "crumbs": [
      "**Single Cell RNASeq**",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Gene expression</span>"
    ]
  },
  {
    "objectID": "chapters/sc/index.html#trajectory",
    "href": "chapters/sc/index.html#trajectory",
    "title": "2  Gene expression",
    "section": "2.9 Trajectory",
    "text": "2.9 Trajectory\n\n\n\n\n\n\n\n\n\n\n\n\n\nFig 2.1:  Comparison of Trajectory inference methods.\n\n\n\nSaelens et al. (2019)\n\n Tempora Trajectory inference for time-series data\n TFvelo Gene regulation inspired RNA velocity estimation",
    "crumbs": [
      "**Single Cell RNASeq**",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Gene expression</span>"
    ]
  },
  {
    "objectID": "chapters/sc/index.html#metacells",
    "href": "chapters/sc/index.html#metacells",
    "title": "2  Gene expression",
    "section": "2.10 Metacells",
    "text": "2.10 Metacells\n\nMetacells are defined as a partition of single-cell data into disjoint homogeneous groups of highly similar cells followed by aggregation of their profiles (Fig. 1). This concept relies on the assumption that most of the variability within metacells corresponds to technical noise and not to biologically relevant heterogeneity. As such, metacells aim at removing some of the noise while preserving the biological information of the single-cell data and improving interpretability.\n\nChoice of graining levels depends on both the complexity and size of the data\n\nFor large and low-complexity data, a relatively high graining level may be used.\nFor higher complexity or lower size, use lower graining levels to preserve the underlying heterogeneity\n\nChoose graining levels such that the resulting number of metacells is at least ten times larger than the expected number of cell subtypes.\nSomewhere between 10 and 50\nOptimal graining is hard to evaluate using measures such as modularity or silhouette coefficient\nNumber of nearest neighbors\n\nIncreasing k results in a more uniform distribution of metacell sizes\nExcessively large values of k (e.g., ~100) may lead to the merging of rare cell types\nReasonable range of values 5–30\n\n\n\n2.10.1 Metrics\n\n\nPurity: Fraction of cells from the most abundant cell type in a metacell\nto check that metacells do not mix cells from different cell types\nCompactness: A measure of a metacell’s homogeneity that helps flag low-quality metacells for review. Its value is dependent on the latent space used.\nSEACells and SuperCell using PCA space will perform better than MetaCell and MC2 which uses normalized gene space\nSeparation: Euclidean distance between centroids of metacells\nThere is also a clear relationship between separation and compactness. Better compactness results in worse separation and vice versa. Metacells from dense regions will have better compactness but worse separation, while metacells from sparse regions will have better separation but worse compactness.\nINV: mean normalized variance of features. Minimal is better\nINV should be proportional to its mean\nSize: Number of single cells per metacell\nTo ensure balanced downstream analyses, it is better to have a more homogeneous metacell size distribution and avoid significant outliers\nRepresentativeness: A good metacell partition should reproduce the overall structure (i.e., manifold) of the single-cell data by uniformly representing its latent space\na more uniform representativeness of the manifold leads to increased variation in metacell sizes to compensate for inherent over- and under-representation of different cell types.\nConservation of downstream analysis\nClustering assignment obtained at the metacell and single-cell levels can be compared using adjusted rand index (ARI) or adjusted mutual information (AMI).\nmetacell concept is used to enhance signal for GRN construction\n\nBy aggregating information from several highly similar cells, metacells reduce the size of the dataset while preserving, and possibly even enhancing, the biological signal. This simultaneously addresses two main challenges of single-cell genomics data analysis: the large size of the single-cell data and its excessive sparsity.\nTrade-off between topology-preserving downsampling (sketching) and imputation.\n\n\n2.10.2 Limitations\n\nThe metacell partition may be considered a very high-resolution clustering.\nmetacells do not guarantee a global convergence.\npotentially group cells of distinct types within a single metacell (impure metacells)\nArtifacts can lead to misleading interpretations, including the presence of non-existing intermediate states or spurious gene co-expression\nrare cell types could be completely missed if entirely aggregated with a more abundant cell type into a single metacell.\nbuild metacells in a supervised manner by constructing metacells for each cell type separately\n\nAdding cells per metacell as covariate\nBilous et al. (2024)\n\n metacell (R)\n metacells (Python)\n SuperCell (R)\n SEACells (Python)\n MATK: Meta Cell Analysis Toolkit (Bash)\n\nGfeller Lab tutorial",
    "crumbs": [
      "**Single Cell RNASeq**",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Gene expression</span>"
    ]
  },
  {
    "objectID": "chapters/sc/index.html#cell-communication",
    "href": "chapters/sc/index.html#cell-communication",
    "title": "2  Gene expression",
    "section": "2.11 Cell communication",
    "text": "2.11 Cell communication\nCell-cell communication and interaction.\nReview of tools Almet et al. (2021)",
    "crumbs": [
      "**Single Cell RNASeq**",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Gene expression</span>"
    ]
  },
  {
    "objectID": "chapters/sc/index.html#rna-velocity",
    "href": "chapters/sc/index.html#rna-velocity",
    "title": "2  Gene expression",
    "section": "2.12 RNA velocity",
    "text": "2.12 RNA velocity\n[Content to be added]",
    "crumbs": [
      "**Single Cell RNASeq**",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Gene expression</span>"
    ]
  },
  {
    "objectID": "chapters/sc/index.html#databases",
    "href": "chapters/sc/index.html#databases",
    "title": "2  Gene expression",
    "section": "2.13 Databases",
    "text": "2.13 Databases\n\n2.13.1 Data\nSingle-cell data repositiories.\n\nscRNASeqDB\nBroad SingleCell portal\nHemberg Lab collection\n10x datasets\nEBI Cell Atlas\nrecount 2\nJingleBells\nCNGB\nR TENxVisiumData\n\n\n\n2.13.2 Markers\nCurated list of marker genes by organism, tissue and cell type.\n\nPanglaoDB\nCellMarker",
    "crumbs": [
      "**Single Cell RNASeq**",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Gene expression</span>"
    ]
  },
  {
    "objectID": "chapters/sc/index.html#interactive-visualisation-frameworks",
    "href": "chapters/sc/index.html#interactive-visualisation-frameworks",
    "title": "2  Gene expression",
    "section": "2.14 Interactive visualisation frameworks",
    "text": "2.14 Interactive visualisation frameworks\n\n ShinyCell(R Shiny)\n Cerebro(R Shiny)\n Vitessce(R, Python)\n CDCP\n SingleCellVR\n Loupe 10X Loupe browser for CellRanger/Spaceranger outputs\n LoupeR Seurat to Loupe format. Supports only GEX assay.\n\n\nOuyang et al. (2021)\n\n\n\nOverview of the visualization tools and their capabilities\n\n\nCakir et al. (2020)",
    "crumbs": [
      "**Single Cell RNASeq**",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Gene expression</span>"
    ]
  },
  {
    "objectID": "chapters/sc/index.html#learning",
    "href": "chapters/sc/index.html#learning",
    "title": "2  Gene expression",
    "section": "2.15 Learning",
    "text": "2.15 Learning\n\nHBC Training\nNBIS workshop\nSeurat tutorials\nDoubletFinder using Seurat tutorial\nSingle-cell analysis with Bioconductor\nSingle-cell analysis with Bioconductor Advanced",
    "crumbs": [
      "**Single Cell RNASeq**",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Gene expression</span>"
    ]
  },
  {
    "objectID": "chapters/sc/index.html#references",
    "href": "chapters/sc/index.html#references",
    "title": "2  Gene expression",
    "section": "References",
    "text": "References\n\n\n\n\nAbdelaal, T., Michielsen, L., Cats, D., Hoogduin, D., Mei, H., Reinders, M. J., & Mahfouz, A. (2019). A comparison of automatic cell identification methods for single-cell RNA sequencing data. Genome Biology, 20, 1–19. https://link.springer.com/article/10.1186/s13059-019-1795-z\n\n\nAlmet, A. A., Cang, Z., Jin, S., & Nie, Q. (2021). The landscape of cell–cell communication through single-cell transcriptomics. Current Opinion in Systems Biology, 26, 12–23. https://www.sciencedirect.com/science/article/pii/S2452310021000081\n\n\nAndreatta, M., Hérault, L., Gueguen, P., Gfeller, D., Berenstein, A. J., & Carmona, S. J. (2024). Semi-supervised integration of single-cell transcriptomics data. Nature Communications, 15(1), 872. https://www.nature.com/articles/s41467-024-45240-z\n\n\nArgelaguet, R., Cuomo, A. S., Stegle, O., & Marioni, J. C. (2021). Computational principles and challenges in single-cell data integration. Nature Biotechnology, 39(10), 1202–1215. https://www.nature.com/articles/s41587-021-00895-7\n\n\nBaran-Gale, J., Chandra, T., & Kirschner, K. (2018). Experimental design for single-cell RNA sequencing. Briefings in Functional Genomics, 17(4), 233–239. https://doi.org/10.1093/bfgp/elx035\n\n\nBilous, M., Hérault, L., Gabriel, A. A., Teleman, M., & Gfeller, D. (2024). Building and analyzing metacells in single-cell genomics data. Molecular Systems Biology, 1–23. https://doi.org/10.1038/s44320-024-00045-6\n\n\nCakir, B., Prete, M., Huang, N., Van Dongen, S., Pir, P., & Kiselev, V. Y. (2020). Comparison of visualization tools for single-cell RNAseq data. NAR Genomics and Bioinformatics, 2(3), lqaa052. https://pmc.ncbi.nlm.nih.gov/articles/PMC7391988/\n\n\nFüllgrabe, A., George, N., Green, M., Nejad, P., Aronow, B., Fexova, S. K., Fischer, C., Freeberg, M. A., Huerta, L., Morrison, N., et al. (2020). Guidelines for reporting single-cell RNA-seq experiments. Nature Biotechnology, 38(12), 1384–1386. https://doi.org/10.1038/s41587-020-00744-z\n\n\nHeumos, L., Schaar, A. C., Lance, C., Litinetskaya, A., Drost, F., Zappia, L., Lücken, M. D., Strobl, D. C., Henao, J., Curion, F., et al. (2023). Best practices for single-cell analysis across modalities. Nature Reviews Genetics, 1–23. https://doi.org/10.1038/s41576-023-00586-w\n\n\nLuecken, M. D., Büttner, M., Chaichoompu, K., Danese, A., Interlandi, M., Müller, M. F., Strobl, D. C., Zappia, L., Dugas, M., Colomé-Tatché, M., et al. (2022). Benchmarking atlas-level data integration in single-cell genomics. Nature Methods, 19(1), 41–50. https://www.nature.com/articles/s41592-021-01336-8\n\n\nLuecken, M. D., & Theis, F. J. (2019). Current best practices in single-cell RNA-seq analysis: A tutorial. Molecular Systems Biology, 15(6), e8746. https://doi.org/10.15252/msb.20188746\n\n\nMelsted, P., Booeshaghi, A. S., Gao, F., Beltrame, E., Lu, L., Hjorleifsson, K. E., Gehring, J., & Pachter, L. (2019). Modular and efficient pre-processing of single-cell RNA-seq. BioRxiv, 673285. http://dx.doi.org/10.1038/s41587-021-00870-2\n\n\nNguyen, Q. H., Pervolarakis, N., Nee, K., & Kessenbrock, K. (2018). Experimental considerations for single-cell RNA sequencing approaches. Frontiers in Cell and Developmental Biology, 6, 108. https://doi.org/10.3389/fcell.2018.00108\n\n\nOuyang, J. F., Kamaraj, U. S., Cao, E. Y., & Rackham, O. J. (2021). ShinyCell: Simple and sharable visualization of single-cell gene expression data. Bioinformatics, 37(19), 3374–3376. https://academic.oup.com/bioinformatics/article/37/19/3374/6198103\n\n\nSaelens, W., Cannoodt, R., Todorov, H., & Saeys, Y. (2019). A comparison of single-cell trajectory inference methods. Nature Biotechnology, 37(5), 547–554. https://www.nature.com/articles/s42003-022-03175-5\n\n\nSun, X., Lin, X., Li, Z., & Wu, H. (2022). A comprehensive comparison of supervised and unsupervised methods for cell type identification in single-cell RNA-seq. Briefings in Bioinformatics, 23(2), bbab567. https://academic.oup.com/bib/article/23/2/bbab567/6502554\n\n\nSvensson, V., Natarajan, K. N., Ly, L.-H., Miragaia, R. J., Labalette, C., Macaulay, I. C., Cvejic, A., & Teichmann, S. A. (2017). Power analysis of single-cell RNA-sequencing experiments. Nature Methods, 14(4), 381–387. https://doi.org/10.1038/nmeth.4220\n\n\nTran, H. T. N., Ang, K. S., Chevrier, M., Zhang, X., Lee, N. Y. S., Goh, M., & Chen, J. (2020). A benchmark of batch-effect correction methods for single-cell RNA sequencing data. Genome Biology, 21, 1–32. https://link.springer.com/article/10.1186/s13059-019-1850-9\n\n\nWang, T., Li, B., Nelson, C. E., & Nabavi, S. (2019). Comparative analysis of differential gene expression analysis tools for single-cell RNA sequencing data. BMC Bioinformatics, 20(1), 1–16. https://academic.oup.com/bib/article/20/1/288/4364840\n\n\nXi, N. M., & Li, J. J. (2021). Benchmarking computational doublet-detection methods for single-cell RNA sequencing data. Cell Systems, 12(2), 176–194. https://doi.org/10.1016/j.cels.2020.11.008\n\n\nXie, B., Jiang, Q., Mora, A., & Li, X. (2021). Automatic cell type identification methods for single-cell RNA sequencing. Computational and Structural Biotechnology Journal, 19, 5874–5887. https://www.sciencedirect.com/science/article/pii/S2001037021004499\n\n\nZappia, L., Richter, S., Ramı́rez-Suástegui, C., Kfuri-Rubens, R., Vornholz, L., Wang, W., Dietrich, O., Frishberg, A., Luecken, M. D., & Theis, F. J. (2025). Feature selection methods affect the performance of scRNA-seq data integration and querying. Nature Methods, 1–11. https://doi.org/10.1038/s41592-025-02624-3\n\n\nZhang, M. J., Ntranos, V., & Tse, D. (2020). Determining sequencing depth in a single-cell RNA-seq experiment. Nature Communications, 11(1), 774. https://doi.org/10.1038/s41467-020-14482-y",
    "crumbs": [
      "**Single Cell RNASeq**",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Gene expression</span>"
    ]
  },
  {
    "objectID": "chapters/spatial/index.html",
    "href": "chapters/spatial/index.html",
    "title": "3  Spatial",
    "section": "",
    "text": "3.1 Overview\nThere are three major resolution scales in ST data:\nWalker et al. (2022), Yue et al. (2023), Moses & Pachter (2022)",
    "crumbs": [
      "**Single Cell RNASeq**",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Spatial</span>"
    ]
  },
  {
    "objectID": "chapters/spatial/index.html#overview",
    "href": "chapters/spatial/index.html#overview",
    "title": "3  Spatial",
    "section": "",
    "text": "multi-cell\nsingle-cell\nsub-cellular",
    "crumbs": [
      "**Single Cell RNASeq**",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Spatial</span>"
    ]
  },
  {
    "objectID": "chapters/spatial/index.html#techniques",
    "href": "chapters/spatial/index.html#techniques",
    "title": "3  Spatial",
    "section": "3.2 Techniques",
    "text": "3.2 Techniques\n\n3.2.1 10X Visium\nAs of May 2024, there are three assays: Spatial GEX, Spatial GEX + Protein and Spatial GEX HD.\n\n\n\n\n\n\n\n\n\nAssay\nSpatial GEX\nSpatial GEX+Protein\nSpatial GEX HD\n\n\n\n\nScope\nWhole transcriptome\nWhole transcriptome+31 Proteins\nWhole transcriptome\n\n\nSpatial resolution\nmulti-cell\nmulti-cell\nsingle-cell\n\n\nTissue\nFFPE,Fresh frozen,Fixed frozen\nFFPE\nFFPE\n\n\nSpecies\nVarious\nHuman,Mouse\nHuman,Mouse\n\n\nCapture area\n6.5x6.5mm\n6.5x6.5mm\n6.5x6.5mm\n\n\nTotal spots\n5K/14K\n5K/14K\n~11.2M\n\n\nSpot size\n55um circle\n55um circle\n2um square\n\n\n\nIn addition, the Visium slides come in different types depending on the assay and version.\n\n\n\nVisium slide types. From left. Visium GEX V1 slide with 4 capture areas for direct use. Visium GEX V4 with 2 capture areas to be used with CytAssist. Visium GEX V5 with 2 larger capture areas to be used with CytAssist. Visium HD GEX H1 slide with 2 capture areas.\n\n\n\n\n\nVisium HD GEX slide.\n\n\n\nQ&A\nSpatial resolution and capture area\nVisium glossary",
    "crumbs": [
      "**Single Cell RNASeq**",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Spatial</span>"
    ]
  },
  {
    "objectID": "chapters/spatial/index.html#methodstools",
    "href": "chapters/spatial/index.html#methodstools",
    "title": "3  Spatial",
    "section": "3.3 Methods/Tools",
    "text": "3.3 Methods/Tools\n\n3.3.1 Frameworks\n\n Seurat (R)\n Giotto (R/Py)\n Squidpy (Py)\n stLearn (Py)\n Semla\n\n\n\n3.3.2 SVG\nIdentification of spatially variable genes.\n\n SpatialDE\n SPARK\n SOMDE\n Sepal\n scGCO\n SpaGCN\n SpatialLIBD\n stLearn\n\n\n\n3.3.3 Spatial deconvolution\n\n STdeconvolve (R)\n\nReference-free\n\n RCTD SpaceXR (R)\n\nNeeds reference\nRuns into error\n\n SPOTlight (R)\n\nUses reference\n\n Giotto SpatialDWLS (R)\n SpatialDDLS (R)\n DSTG (Py)\n Tangram (Py)\n\n\n\n3.3.4 Cell interaction\nGiven the relative stability of cellular locations, spatial transcriptomics allows us to reveal cell–cell interactions (CCI), also referred to as cell-cell communications (CCC), with fewer false positives than similar analysis with scRNA-seq data.\n\n SpaOTsc",
    "crumbs": [
      "**Single Cell RNASeq**",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Spatial</span>"
    ]
  },
  {
    "objectID": "chapters/spatial/index.html#datasets",
    "href": "chapters/spatial/index.html#datasets",
    "title": "3  Spatial",
    "section": "3.4 Datasets",
    "text": "3.4 Datasets\n\nR package TENxVisiumData",
    "crumbs": [
      "**Single Cell RNASeq**",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Spatial</span>"
    ]
  },
  {
    "objectID": "chapters/spatial/index.html#resources",
    "href": "chapters/spatial/index.html#resources",
    "title": "3  Spatial",
    "section": "3.5 Resources",
    "text": "3.5 Resources\n\nOSTA Book\nElixir Spatial Omics Data Analysis Workshop",
    "crumbs": [
      "**Single Cell RNASeq**",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Spatial</span>"
    ]
  },
  {
    "objectID": "chapters/spatial/index.html#references",
    "href": "chapters/spatial/index.html#references",
    "title": "3  Spatial",
    "section": "References",
    "text": "References\n\n\n\n\nMoses, L., & Pachter, L. (2022). Museum of spatial transcriptomics. Nature Methods, 19(5), 534–546. https://www.nature.com/articles/s41592-022-01409-2\n\n\nWalker, B. L., Cang, Z., Ren, H., Bourgain-Chang, E., & Nie, Q. (2022). Deciphering tissue structure and function using spatial transcriptomics. Communications Biology, 5(1), 220.\n\n\nYue, L., Liu, F., Hu, J., Yang, P., Wang, Y., Dong, J., Shu, W., Huang, X., & Wang, S. (2023). A guidebook of spatial transcriptomic technologies, data resources and analysis approaches. Computational and Structural Biotechnology Journal. https://www.sciencedirect.com/science/article/pii/S2001037023000156",
    "crumbs": [
      "**Single Cell RNASeq**",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Spatial</span>"
    ]
  },
  {
    "objectID": "chapters/airr/index.html",
    "href": "chapters/airr/index.html",
    "title": "4  AIRR-Seq",
    "section": "",
    "text": "4.1 Immunity overview",
    "crumbs": [
      "**Single Cell RNASeq**",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>AIRR-Seq</span>"
    ]
  },
  {
    "objectID": "chapters/airr/index.html#immunity-overview",
    "href": "chapters/airr/index.html#immunity-overview",
    "title": "4  AIRR-Seq",
    "section": "",
    "text": "4.1.1 Innate vs Adaptive immunity\n\nInnate (Physical, Phagocytes, Dendritic cells, NK cells, ILCs, 0-12 hours)\nAdaptive immunity (Begins ~3 days or more)\n\n\n\n\n\n\n\nFig 4.1:  Just as resistance to disease can be innate (inborn) or acquired, the mechanisms mediating it can be correspondingly divided into innate (left) and adaptive (right), each composed of both cellular (lower half) and humoral elements (i.e. free in serum or body fluids; upper half). Adaptive mechanisms, more recently evolved, perform many of their functions by interacting with the older innate ones.\n\n\n\n\n\n\n\n\n\nFig 4.2:  Innate and adaptive immunity time line. The mechanisms of innate immunity provide the initial defense against infections. Adaptive immune responses develop later and require the activation of lymphocytes. The kinetics of the innate and adaptive immune responses are approximations and may vary in different infections.\n\n\n\nSource\n\n\n4.1.2 Adaptive immunity\n\nHumoral immunity (B cells, antibodies)\nCell mediated immunity (CD4 Helper T cells, CD8 Cytotoxic T cells, Macrophages)\n\n\n\n\n\n\n\nFig 4.3:  The figure shows an adaptive immune response to the first and second encounter with the SARS-CoV-2 antigen (spike protein).\n\n\n\nFollowing the first encounter, various antigens go through the process of phagocytosis and decomposition inside the antigen-presenting cells (APCs). APCs fragment the antigen into smaller peptides, which they present on their surface mediated by surface receptors called major histocompatibility complex class II (MHC-II) molecules. The antigens are then presented to several types of cells in the host, among which we emphasize CD4+ T helper cells (also B and CD8+ cells). B cells which differentiate into plasma cells, secrete antibodies that inhibit the entry of the viral particle into the healthy cells. The activation of T helper cells by APC causes them to differentiate into different subtypes with specific functions mediated by cytokine secretion and cell-to-cell contact. Th2-differentiated T helper cells help humoral responses mature by providing a second signal to B cells, mostly through IL-4 secretion and CD40/CD40L interaction. Some CD4+ cells also become T follicular helper cells (Tfh), which govern the important interactions in the germinal centers important for the maturation of memory B cells and long-lived high-affinity antibody-producing plasma cells. Another subset of CD4+ T cells differentiates into a pool of memory T helper cells. Th1 T helper cells play a crucial role in cellular response formation. They pivot the MHC-I activation of CD8+ cells (CTL, cytotoxic T lymphocytes) by interacting with APC’s simultaneously. Activated CTLs then act by causing apoptosis (by Fasl ligand–FasL binding) of the host cells that are infected with the SARS-CoV-2. Some CTLs differentiate into memory cytotoxic T cells, which have the role of fast restoration of the CTL response with secondary antigen contacts. A similar mechanism of destruction occurs when NK cells interact with the virally infected cell. They contain granules with IFNγ and TNFα in their cytoplasm, which, when secreted, cause programmed cell death. As well, the mechanism of activation of NK cells does not occur through MHC molecules is important because MHC is not always present on the virally infected cells.\nPrimorac et al. (2022)\n\n\n\n\n\n\nFig 4.4:  Detailed lineage tree showing development of various blood cells. Image source: Beckman Coulter.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFig 4.5:  Cells of the immune system showing a simplified lineage.\n\n\n\nKavathas et al. (2019), Lewis & Blutt (2019)",
    "crumbs": [
      "**Single Cell RNASeq**",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>AIRR-Seq</span>"
    ]
  },
  {
    "objectID": "chapters/airr/index.html#immune-cells",
    "href": "chapters/airr/index.html#immune-cells",
    "title": "4  AIRR-Seq",
    "section": "4.2 Immune cells",
    "text": "4.2 Immune cells\n\n4.2.1 B cell development\n\n\n\n\n\n\n\n\n\n\n\n\n\nFig 4.6:  B cell development.\n\n\n\n\nThe aim is to generate diverse antigen receptors, eliminate self reactives, promote foreign reactives to mature B cells\nStarts in the bone marrow as HSC followed by CLP (Common lymphoid progenitor)\nEarly pro B cell → Heavy chain random DJ rearrangement\n\nIf it succeeds on both chromosomes, this cell becomes Late pro B cell\n\nLate pro B cell →V and DJ rearrangement\n\nIf it succeeds on both chromosomes, this cell becomes Large pre B cell\n\nLarge pre B cell →Heavy chain peptide is synthesized, pairs with surrogate light chains\n\nOn successful pairing, this cell proliferates\nThe same heavy chain can pair with many other light chains.\n\nSmall pre B cell →Undergoes light chain rearrangement\n\nkappa rearrangement on one chr\nkappa rearrangement on second chr\nIf kappa didn’t work then\ndelta rearrangement on one chr\ndelta rearrangement on second chr\nWhen light chain pairs successfully with heavy chain→Immature B cell\n\nImmature B cell\n\nVDJ recombination is complete\nFunctional BCR receptor as IgM -&gt; Mature naive B cell\nBCRs can bind to diverse ligands such as peptides, lips, carbohydrates etc\n\nMature naive B cell\n\nThe heavy chain mRNA undergoes alternative splicing which changes the transmembrane region to either create IgM or IgD but with same variable region\n\nNaive B cells interact with antigen in the lymph nodes. When the antigen has crosslinked with BCR, the cell is activated. An activated B cell massively proliferates called clonal expansion. All clonally expanded cells have the same antigen specificity but undergoes somatic hypermutation (affinity maturation). SHM may increase antigen affinity than the original activated parent B cell.\nAffinity matured B cells differentiate into plasma cells. Plasma cells are antibody secreting B cells. The first antibody produced is IgM. T cell independent differentiation only produces IgM antibodies and also does not produce memory B cells.\nT cell mediated B cell maturation. B cells interact with T cells in the lymph node enabling Ig class switching. ie; change in heavy chain.\n\nSource: Kuby immunology\nMorgan & Tergaonkar (2022)\n\n\n4.2.2 T cell development\n\n\n\n\n\n\n\n\n\n\n\n\n\nFig 4.7:  T cell development.\n\n\n\n\nTCR has two chain: alpha and beta chains. TCRs only bind to peptides and self MHC.\nIn bone marrow, HSC →CLP which migrates to thymus\nThymus is divided into peripheral cortex and central medulla. Most T cell development happens in the cortex.\nIn the thymus, the CLP starts off as double negative T cell\nDouble negative T cells: T cells with germline DNA that are negative for CD4 and CD8\n\nEarly double-negative thymocyte: D-J beta chain rearrangement, first try on 1st loci, else second loci\nLate double-negative thymocyte: V-DJ beta chain rearrangement, first try on 1st loci, else second loci\nCD3 receptor is expressed on cell surface\n\nDouble-positive T cells:\n\nExpresses both CD4 and CD8 receptors.\nAlpha chain rearrangement. V-J rearrangement at loci 1, else loci n.\nAlpha and beta chains are exposed on cell surface and cell undergo selection\n\nCells that have too strong or too weak self affinity are discarded\nCells that recognise self MHC with moderate strength -&gt; CD4+\nCells that recognize self MHC with weak strength -&gt; CD8+\n\n\nSingle-positive: Naive CD4 or CD8 T cells\nMemory CD4 or CD8 T cells\nEffector CD4 or CD8 T cells\n\nSource: Kuby immunology\nDe Simone et al. (2018)",
    "crumbs": [
      "**Single Cell RNASeq**",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>AIRR-Seq</span>"
    ]
  },
  {
    "objectID": "chapters/airr/index.html#vdj-recombination",
    "href": "chapters/airr/index.html#vdj-recombination",
    "title": "4  AIRR-Seq",
    "section": "4.3 VDJ recombination",
    "text": "4.3 VDJ recombination\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFig 4.8:  Fig 1 and 2 shows BCR/antibody structure and the V(D)J locus. Fig 3 shows the genomic structure of BCR and TCR chains. Image references: 1, 2, 3\n\n\n\nV(D)J recombination is the mechanism of somatic recombination that occurs only in developing lymphocytes during the early stages of T and B cell maturation. It results in the highly diverse repertoire of antibodies/immunoglobulins and T cell receptors (TCRs) found in B cells and T cells, respectively. The process is a defining feature of the adaptive immune system.\nV(D)J recombination in mammals occurs in the primary lymphoid organs (bone marrow for B cells and thymus for T cells) and in a nearly random fashion rearranges variable (V), joining (J), and in some cases, diversity (D) gene segments. The process ultimately results in novel amino acid sequences in the antigen-binding regions of immunoglobulins and TCRs that allow for the recognition of antigens from nearly all pathogens including bacteria, viruses, parasites, and worms as well as “altered self cells” as seen in cancer.\nGermline organisation of the Ig locus\n\nIg proteins consists of two identical heavy and light chains\n\nH chain locus is located on Chr 14\n\nThe light chains can be kappa or lamba\n\nKappa chain locus on Chr 2\nLamba chain locus on Chr 22\n\n\n\n4.3.0.1 BCR review\n\nBCR consist of two heavy and 2 light chains. Heavy chain has 1 V domains and 4-5 C domains. Light chain contains 1 C and 1 V domain.\nCDR in V domains makes contact with antigen\nFollowing antigen stimulation, B cells secrete immunoglobulins that bear the same antigen binding site as the BCR\n\n\n\n4.3.0.2 TCR review\n\nHuman T cells develop in the thymus and they acquire the ability to recognize foreign antigens and provide protection against many different pathogens.\nThis functional flexibility is guaranteed by the expression of highly polymorphic surface receptors called T cell receptors (TCRs).\nTCR is composed of two different protein chains. The vast majority of human T cells express TCRs composed of α (alpha) and β (beta) chains.\nThe genes encoding alpha (TCRA) and beta (TCRB) chains are composed of multiple non-contiguous gene segments which include variable (V), diversity (D), and joining (J) segments for TCRB gene and variable (V) and joining (J) for TCRA gene.\nThe enormous diversity of T cell repertoires is generated by random combinations of germ line gene segments (combinatorial diversity) and by random addition or deletion at the junction site of the segments that have been joined (junctional diversity).\nThe sequence encoded by the V(D)J junction is called complementarity determining region 3 or CDR3. This sequence has the highest variability in both alpha and beta chains and determines the ability of a T cell to recognize an antigen.\nThe total number of possible combination is estimated to exceed 10^18.\nThe diversity of naïve T cells is the T cell repertoire\nExposure to an antigen drives a rapid clonal expansion of cells carrying identical TCRs to generate a population of “effector cells.”\nAfter antigen clearance, a reduced number of these cells remain in the blood as “memory cells.”\n\n\n\n\n\n\n\nFig 4.9:  Somatic V(D)J arrangement in the alpha and beta chains. (A) Genomic organization and somatic recombination of TCRB and TCRA loci. Antigen repertoire diversity is guaranteed by a recombination step that progressively rearranges V, D, and J segments for T cell receptor (TCR) beta chains and V and J segments for TCR alpha chains. This variability (combinatorial diversity) is further increased by addition or deletion of nucleotides at the junction sites (junctional diversity). (B) Productive arrangements of beta and alpha transcripts. (C) Organization of TCR. TCR is composed by two subunits TCR alpha and TCR beta each organized in a constant region and a variable region responsible for antigen recognition.\n\n\n\n\n\n\n\n\n\nFig 4.10:  Differences between BCR and TCR receptors.",
    "crumbs": [
      "**Single Cell RNASeq**",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>AIRR-Seq</span>"
    ]
  },
  {
    "objectID": "chapters/airr/index.html#antibodies",
    "href": "chapters/airr/index.html#antibodies",
    "title": "4  AIRR-Seq",
    "section": "4.4 Antibodies",
    "text": "4.4 Antibodies\n\n\n\n\n\n\nFig 4.11:  Structure of an antibody\n\n\n\n\nAntibodies are secreted by plasma B cells\nConsist of 2 identical heavy and 2 identical light chains\n\nLight chain is either kappa or lamda. There are 4 subtypes of lamda with lamda 1 as most common.\nHeavy chain is either mju, gamma, alpha, delta or epsilon\n\nHeavy chain defines the isotype (IgG, IgA etc)\n\n\nEach chain has a variable domain and constant domain\n\nLight chain has 50% variable and 50% constant domain\nHeavy chain has 25% variable and 75% constant domain\nThe variable domain is called the paratope that interact with epitopes on antigen\n\nThe variable region has 3 CDR (complementarity determining) regions that are hypervariable. CDR3 is the most variable.\nPeritope?\n\n\nThe CDR region of heavy chain is composed of V,D,J genes\nThe CDR region of light chain is composed of V,J genes\nAntibody isotypes (classes) are defined by the heavy chain: IgG, IgD, IgE, IgA (dimer), IgM (pentamer)\nTypes of antibodies (further work)\n\nSource: Kuby immunology\n\nChap 6: The organisation and expression of lymphocyte recepter genes\nChap 8: T-cell development\nChap 9: B-cell development\nChap 10: T-cell activation, helper subset differentiation and memory\nChap 11: B-cell activation, differentiation and memory generation\nChap 12: Effector responses: antibody and cell-mediated immunity",
    "crumbs": [
      "**Single Cell RNASeq**",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>AIRR-Seq</span>"
    ]
  },
  {
    "objectID": "chapters/airr/index.html#airr",
    "href": "chapters/airr/index.html#airr",
    "title": "4  AIRR-Seq",
    "section": "4.5 AIRR",
    "text": "4.5 AIRR\nSingle cell immune repertoire analysis overview Irac et al. (2024)\n\n4.5.1 Experimental design\n\nIn addition to V(D)J recombination, random nuclotides are inserted at the VDJ junctions. B cells further change itself by introducing random mutations called somatic hypermutation.\nSource of B and T cells should be carefully considered\n\nUsually PBMCs or specific cell types\n\nConsider DNA vs RNA from cells\n\nDNA does not give isotype information due to lack of splicing\nPlasma cells have more RNA than naive cells, so if mixed together, plasma cells may be overrepresented.\n\nAssignment of clones\n\nAssignment of B cells to it’s progenitor B cells is called clonotype family assignment. Clonal lineage is determined based on TCR/BCR sequence. Sequences are grouped by VDJ and CDR length followed by calculating the hamming distance between them.\nAll cells that are derieved from a naive B cell are grouped as clonotypes\nHamming distance cut-offs based on V and J sequences\nOptionally CDR3 length is also taken into account\nOther kmer based clustering methods are used\n\nSampling depth and replicates\n\nExpect low clonal overlap between subsequent sampling from same individual\nSaturation curves (Species accumulation curve) to estimate sampling depth\nDeeper sequencing helps to discover more clones\n\nSequence 5-10X reads relative to the number of cells sampled\n\nEnsure reliability with biological replicates\n\nResults can vary between sequencing protocols\nUMIs help to resolve PCR duplicates and sequencing errors.\n\nUMIs can be used for error correction and estimating sample contamination.\nLow sequencing depth will result in very few UMIs per read\nWith UMIs, sequence 100X or more reads relative to the number of cells sampled\n\nD region reconstruction is unreliable\nA single B cell line should have only one V gene\nBulk AIRR loses information on VH-VL pairing\n\nAIRR-Seq experiment guide and best practices Eugster et al. (2022), Antibody repertoire challenges and high throughput sequencing Georgiou et al. (2014), Bioinformatic analysis of adaptive immune repertoires Greiff et al. (2015), Ecosystem of machine learning analysis of adaptive immune repertoires Pavlović et al. (2021), BCR AIRR guidelines Yaari & Kleinstein (2015), Benchmarking of VDJ methods. Barennes et al. (2021), Breden et al. (2017), Vander Heiden et al. (2018)\n\n\n4.5.2 Diversity analyses\n\nCompare immune repertoire diversity\n\nOne of the aims of AIRR analyses is to quantify and compare diversity of immune repertoires\nRepertoires are not comparable based on frequency because Ab sequences do not overlap\nDiversity indices solve this problem by mapping frequency to a new coordinate system (Renyi entropy)\n\nMany different diversity indices: Species richness, Shannon entropy, Simpson’s index, Berger-Parker index\nSingle diversity indices are insufficient to capture sequence frequency space\nRenyi entropy is difficult to interpret biologically\nHill diversity?\nDiversity profiles better than indices?\n\n\nPublic clones are clonotypes shared between samples\n\nAre certain clones emerging by chance or by antigen interaction?\nIGOR: Inference and generation of repertoires\nPredicting TCR public clones by modelling VDJ recombination\n\nHow similar are sequences within a repertoire?\n\nnetwork analysis based on distance matrix (levenstein distance)\nIf undergoing immune response, repertoire follows power law (few nodes many connections)\n\nnaive repertoires follow exponential distribution\n\n\n\n\n\n4.5.3 Lineage tracing\n\nPhylogenetics and lineage tracing\nInfer antibody evolution in response to antigen\nDetect selection on B cell lineage\nQuantify dynamics of affinity maturation\nReconstruct evolution of broadly neutralizing antibodies\nComparison of tree topologies is challenging\n\nTracing antibody repertoire evolution by phylogeny Yermanos et al. (2018), Using B cell recepter lineage to predict affinity Ralph & Matsen IV (2020), Phylogenetic analysis of migration, differentiation and class switching in B cells Hoehn et al. (2022)",
    "crumbs": [
      "**Single Cell RNASeq**",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>AIRR-Seq</span>"
    ]
  },
  {
    "objectID": "chapters/airr/index.html#tutorials",
    "href": "chapters/airr/index.html#tutorials",
    "title": "4  AIRR-Seq",
    "section": "4.6 Tutorials",
    "text": "4.6 Tutorials\n\n4.6.1 Videos\nYoutube channels AIRR Community and The Antibody Society are good sources of information.\n\n AIRR-Seq best practices\n Reconstruction and analysis of B cell lineage trees from single cell data using Immcantation\n Practical AIRR analysis\n AIRR framework",
    "crumbs": [
      "**Single Cell RNASeq**",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>AIRR-Seq</span>"
    ]
  },
  {
    "objectID": "chapters/airr/index.html#tools",
    "href": "chapters/airr/index.html#tools",
    "title": "4  AIRR-Seq",
    "section": "4.7 Tools",
    "text": "4.7 Tools\nTools related to VDJ analyses.\nCollection of VDJ analyses tools\nOverview of methods for TCR repertoire analysis Rosati et al. (2017) Benchmarking of BCR reconstruction from single-cell tools Andreani et al. (2022) Benchmarking immunoinformatic tools for the analysis of antibody repertoire sequences Smakaj et al. (2020)\n\n4.7.1 General\n\n Enclone (10X, Shell) SHM-aware clonotyping, phylogenetic/lineage analysis, multiple sequence alignment\n Immcantation (Shell) QC, UMI processing, clonal clustering, germline reconstruction, lineage topology, repertoire diversity, mutation profiling\n airrflow nf-core nextflow airr pipeline using Immcantation\n\n\n\n\n\n\n\nFig 4.12:  AIRR nextflow pipeline using Immcantation\n\n\n\n\n ImmuneML (Shell/GUI) Ecosystem for machine learning analysis of adaptive immune receptor repertoires (Pavlović et al. (2021))\n\n\n\n4.7.2 Reads to VDJ data\n\n CellRanger (Shell)\n ChangeO (Shell) Processing the output of V(D)J alignment tools, assigning clonal clusters to immunoglobulin (Ig) sequences, and reconstructing germline sequences (Part of immcantation)\n MixCR (Shell) Start from any read data\n\n\n\n\n\n\n\nFig 4.13:  MIXCR workflow\n\n\n\n\n TRUST4 (Shell) TCR and BCR assembly from RNA-seq data\n Partis (Shell) HMM-based framework for B- and T-cell receptor sequence annotation, simulation, clonal family and germline inference, and affinity prediction.\n\n\n4.7.2.1 Clonal family inference\n\n\n\n\n\n\n\n\nA) Development of B-cell receptors and their sequences. In mature naive B cells, during VDJ-recombination N and P nucleotides are added in between the junctions leading to more junctional diversity. Interaction with antigen causes it to proliferate into more clones undergoing somatic hypermutations. B) Overview of the methods and their requirements. We used two types of methods: methods dependent on a reference genome and methods independent of a reference genome. For the independent method, mPTP, we first build a phylogenetic tree of all sequences with RAxML-NG. mPTP then fits two Poisson Processes, one for speciation and one for coalescence, to the data and groups the clones accordingly. The reference-genome-dependent methods first align the sequences to a reference genome to find the used V and J genes. This alignment is either done by the methods themselves (MiXCR) or done through IMGT. MiXCR delimits the clones by the CDR3 region, accounting for PCR and sequencing errors. Change-O delimits the clones by a common V and J gene and an identical CDR3 region. SCOPer uses the common V and J groups provided by Change-O. The hierarchical method then further groups by 85% junction region similarity. The spectral method calculates an adaptive threshold for junction region similarity.\n\n\n\n\n\n\n\nComparison of tools and features.\n\n\n\n\n\n\n\nNumber of Clonal Families (log scale) discerned by the different tools.\n\n\n\n\n\n\nFig 4.14:  Figures from the article.\n\n\n\n\nOur comparative analysis of four state-of-the-art tools revealed SCOPer-H as the optimal choice for delimiting B-cell clones in organisms with reliable reference genomes, such as humans and mice. SCOPer-H effectively accounts for both VDJ-recombination and somatic hypermutation (SHM) utilizing a reference genome, making it well-suited for model organisms.\n\nVoss et al. (2024)\n\nMost CF reconstruction methods perform comparably, with SCOPer (A7, A8) producing distinctly fewer but larger CFs due to its specific similarity measure.\nSimple methods like A4 (setting a relative similarity threshold) perform as well as more complex ones like A9 (partis). Simple methods like A4 (setting a relative similarity threshold) perform as well as more complex ones like A9 (partis).\nChange-O (A6) seems to perform little better compared to the other methods and is always in agreement with the ground truth.\nApproaches A1 (unique junction sequences) and A2 (subclones) surprisingly align closely with other methods in experimental data but not in simulations.\nThe alignment-free method (A10) tends to overestimate the number of CFs, particularly noted in single cell datasets.\nChange-O (A6) generally aligns with ground truth but does not surpass other methods in LC (light chain) concordance analysis.\n\nBalashova et al. (2024)\n\n\n\n4.7.3 Downstream analyses\n\n vdjtools (Java)\n conga (Python)\n SONAR (Python)\n scRepertoire (R) 10X VDJ cellranger input\n djvdj (R) 10X VDJ cellranger input\n immunarch (R) 10X, MIXCR input\n scirpy (Python)\n alakazam (R) Repertoire analysis on output from pRESTO and ChangeO (Part of Immcantation)\n dowser (R) Phylogenetic analysis of B cells (Part of Immcantation)\n melange (R) Read MIXCR, Annovar, RSEM data into Seurat\n Partis (R) B and T-cell receptor sequence annotation, simulation, clonal family and germline inference, and affinity prediction\n NAIR (R) Network Analysis of Immune Repertoire\n star-repair (Bash) Pair heavy and light chains in visium spots\n\n\n4.7.3.1 Immunarch\n\nExploratory data analyses\n\nNumber of clones per sample, filter low quality clones/samples?\nDistribution of CDR3 lengths by sample (nucleotide or AA)\nDistribution of abundances\nDownsample data to make it comparable. only downsample on datasets with sufficient depth\nPublic clonotype analysis\n\nEstimate similarity of samples using number of shared clonotypes\nNumber of shared clonotypes (best for downsampled data)\nJaccard index\nMorisita-Horn index\nVisualised using heatmaps\n\n\nClonality analyses\n\nEstimate and compare differences in abundances of clonotypes between samples\nCompare proportions of the most and least abundant clonotypes\nRelative abundance\n\nDiversity analyses\n\nCompare diversity of clonotypes in and between samples\nRarefaction (models, extrapolates data)\n\n\n AIRR analyses using immunarch",
    "crumbs": [
      "**Single Cell RNASeq**",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>AIRR-Seq</span>"
    ]
  },
  {
    "objectID": "chapters/airr/index.html#databases",
    "href": "chapters/airr/index.html#databases",
    "title": "4  AIRR-Seq",
    "section": "4.8 Databases",
    "text": "4.8 Databases\n\nvdjbase Database of adaptive immune receptor genes, genotypes and haplotypes\nAIRR-C IG reference sets Collins et al. (2024)\nIMGT: Nucleotide sequences for IG & TR, Human HLA sequences etc",
    "crumbs": [
      "**Single Cell RNASeq**",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>AIRR-Seq</span>"
    ]
  },
  {
    "objectID": "chapters/airr/index.html#references",
    "href": "chapters/airr/index.html#references",
    "title": "4  AIRR-Seq",
    "section": "References",
    "text": "References\n\n\n\n\nAndreani, T., Slot, L. M., Gabillard, S., Struebing, C., Reimertz, C., Yaligara, V., Bakker, A. M., Olfati-Saber, R., Toes, R. E., Scherer, H. U., et al. (2022). Benchmarking computational methods for b-cell receptor reconstruction from single-cell RNA-seq data. NAR Genomics and Bioinformatics, 4(3), lqac049. https://academic.oup.com/nargab/article/4/3/lqac049/6643029\n\n\nBalashova, D., Schaik, B. D. van, Stratigopoulou, M., Guikema, J. E., Caniels, T. G., Claireaux, M., Gils, M. J. van, Musters, A., Anang, D. C., Vries, N. de, et al. (2024). Systematic evaluation of b-cell clonal family inference approaches. BMC Immunology, 25(1), 13. https://bmcimmunol.biomedcentral.com/articles/10.1186/s12865-024-00600-8\n\n\nBarennes, P., Quiniou, V., Shugay, M., Egorov, E. S., Davydov, A. N., Chudakov, D. M., Uddin, I., Ismail, M., Oakes, T., Chain, B., et al. (2021). Benchmarking of t cell receptor repertoire profiling methods reveals large systematic biases. Nature Biotechnology, 39(2), 236–245. https://www.nature.com/articles/s41587-020-0656-3\n\n\nBreden, F., Luning Prak, E. T., Peters, B., Rubelt, F., Schramm, C. A., Busse, C. E., Vander Heiden, J. A., Christley, S., Bukhari, S. A. C., Thorogood, A., et al. (2017). Reproducibility and reuse of adaptive immune receptor repertoire data. Frontiers in Immunology, 8, 1418. https://www.frontiersin.org/journals/immunology/articles/10.3389/fimmu.2017.01418/full\n\n\nCollins, A. M., Ohlin, M., Corcoran, M., Heather, J. M., Ralph, D., Law, M., Martı́nez-Barnetche, J., Ye, J., Richardson, E., Gibson, W. S., et al. (2024). AIRR-c IG reference sets: Curated sets of immunoglobulin heavy and light chain germline genes. Frontiers in Immunology, 14, 1330153. https://www.frontiersin.org/journals/immunology/articles/10.3389/fimmu.2023.1330153/full\n\n\nDe Simone, M., Rossetti, G., & Pagani, M. (2018). Single cell t cell receptor sequencing: Techniques and future challenges. Frontiers in Immunology, 9, 1638. https://www.frontiersin.org/journals/immunology/articles/10.3389/fimmu.2018.01638/full\n\n\nEugster, A., Bostick, M. L., Gupta, N., Mariotti-Ferrandiz, E., Kraus, G., Meng, W., Soto, C., Trück, J., Stervbo, U., Prak, E. T. L., et al. (2022). AIRR community guide to planning and performing AIRR-seq experiments. Methods and Protocols, 261. https://library.oapen.org/bitstream/handle/20.500.12657/57008/1/978-1-0716-2115-8.pdf\n\n\nGeorgiou, G., Ippolito, G. C., Beausang, J., Busse, C. E., Wardemann, H., & Quake, S. R. (2014). The promise and challenge of high-throughput sequencing of the antibody repertoire. Nature Biotechnology, 32(2), 158–168. https://www.nature.com/articles/nbt.2782\n\n\nGreiff, V., Miho, E., Menzel, U., & Reddy, S. T. (2015). Bioinformatic and statistical analysis of adaptive immune repertoires. Trends in Immunology, 36(11), 738–749. https://www.cell.com/trends/immunology/fulltext/S1471-4906(15)00223-9\n\n\nHoehn, K. B., Pybus, O. G., & Kleinstein, S. H. (2022). Phylogenetic analysis of migration, differentiation, and class switching in b cells. PLoS Computational Biology, 18(4), e1009885. https://journals.plos.org/ploscompbiol/article?id=10.1371/journal.pcbi.1009885\n\n\nIrac, S. E., Soon, M. S. F., Borcherding, N., & Tuong, Z. K. (2024). Single-cell immune repertoire analysis. Nature Methods, 1–16. https://www.nature.com/articles/s41592-024-02243-4\n\n\nKavathas, P. B., Krause, P. J., & Ruddle, N. H. (2019). Organization and cells of the immune system. In P. J. Krause, P. B. Kavathas, & N. H. Ruddle (Eds.), Immunoepidemiology (pp. 21–38). Springer International Publishing. https://doi.org/10.1007/978-3-030-25553-4_2\n\n\nLewis, D. E., & Blutt, S. E. (2019). 2 - organization of the immune system. In R. R. Rich, T. A. Fleisher, W. T. Shearer, H. W. Schroeder, A. J. Frew, & C. M. Weyand (Eds.), Clinical immunology (fifth edition) (Fifth Edition, pp. 19–38.e1). Elsevier. https://doi.org/10.1016/B978-0-7020-6896-6.00002-8\n\n\nMorgan, D., & Tergaonkar, V. (2022). Unraveling b cell trajectories at single cell resolution. Trends in Immunology, 43(3), 210–229. https://doi.org/10.1016/j.it.2022.01.003\n\n\nPavlović, M., Scheffer, L., Motwani, K., Kanduri, C., Kompova, R., Vazov, N., Waagan, K., Bernal, F. L., Costa, A. A., Corrie, B., et al. (2021). The immuneML ecosystem for machine learning analysis of adaptive immune receptor repertoires. Nature Machine Intelligence, 3(11), 936–944. https://www.nature.com/articles/s42256-021-00413-z\n\n\nPrimorac, D., Vrdoljak, K., Brlek, P., Pavelić, E., Molnar, V., Matišić, V., Erceg Ivkošić, I., & Parčina, M. (2022). Adaptive immune responses and immunity to SARS-CoV-2. Frontiers in Immunology, 13, 2035. https://www.frontiersin.org/journals/immunology/articles/10.3389/fimmu.2022.848582/full\n\n\nRalph, D. K., & Matsen IV, F. A. (2020). Using b cell receptor lineage structures to predict affinity. PLOS Computational Biology, 16(11), e1008391. https://journals.plos.org/ploscompbiol/article?id=10.1371/journal.pcbi.1008391\n\n\nRosati, E., Dowds, C. M., Liaskou, E., Henriksen, E. K. K., Karlsen, T. H., & Franke, A. (2017). Overview of methodologies for t-cell receptor repertoire analysis. BMC Biotechnology, 17(1), 1–16. https://bmcbiotechnol.biomedcentral.com/articles/10.1186/s12896-017-0379-9\n\n\nSmakaj, E., Babrak, L., Ohlin, M., Shugay, M., Briney, B., Tosoni, D., Galli, C., Grobelsek, V., D’Angelo, I., Olson, B., et al. (2020). Benchmarking immunoinformatic tools for the analysis of antibody repertoire sequences. Bioinformatics, 36(6), 1731–1739. https://academic.oup.com/bioinformatics/article/36/6/1731/5686386\n\n\nVander Heiden, J. A., Marquez, S., Marthandan, N., Bukhari, S. A. C., Busse, C. E., Corrie, B., Hershberg, U., Kleinstein, S. H., Matsen IV, F. A., Ralph, D. K., et al. (2018). AIRR community standardized representations for annotated immune repertoires. Frontiers in Immunology, 9, 2206. https://www.frontiersin.org/journals/immunology/articles/10.3389/fimmu.2018.02206/full\n\n\nVoss, K., Kaur, K. M., Banerjee, R., Breden, F., & Pennell, M. (2024). Evaluating methods for b-cell clonal family assignment. bioRxiv. https://pmc.ncbi.nlm.nih.gov/articles/PMC11160721/\n\n\nYaari, G., & Kleinstein, S. H. (2015). Practical guidelines for b-cell receptor repertoire sequencing analysis. Genome Medicine, 7, 1–14. https://link.springer.com/article/10.1186/s13073-015-0243-2\n\n\nYermanos, A. D., Dounas, A. K., Stadler, T., Oxenius, A., & Reddy, S. T. (2018). Tracing antibody repertoire evolution by systems phylogeny. Frontiers in Immunology, 9, 2149. https://www.frontiersin.org/articles/10.3389/fimmu.2018.02149/full",
    "crumbs": [
      "**Single Cell RNASeq**",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>AIRR-Seq</span>"
    ]
  },
  {
    "objectID": "chapters/atacseq/index.html",
    "href": "chapters/atacseq/index.html",
    "title": "5  ATAC-Seq",
    "section": "",
    "text": "5.1 Overview",
    "crumbs": [
      "**Single Cell RNASeq**",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>ATAC-Seq</span>"
    ]
  },
  {
    "objectID": "chapters/atacseq/index.html#atacseq-overview",
    "href": "chapters/atacseq/index.html#atacseq-overview",
    "title": "5  ATAC-Seq",
    "section": "",
    "text": "5.1.1 Bulk ATAC-Seq\n\nATAC-seq provides a simple and scalable way to assay the regions of the genome that are bound by TFs, and to compare how these landscapes change between particular contexts or perturbations. This is accomplished using in vitro transposition of sequencing adapters into native chromatin. Each unique transposition event, termed an ‘insertion’, marks a location in the genome where a Tn5 transposase dimer is able to access DNA and perform a cut-and-paste reaction. The transposase simultaneously fragments the DNA and inserts sequence handles that are then used for amplification during library preparation.\nGrandi et al. (2022), Yan et al. (2020)\n\n\n5.1.2 Single-cell ATAC-Seq\n\nATAC-Seq quantifies DNA and can be applied to frozen/fixed tisues where nuclei can be isolated\n\n\n\n\nWet-lab workflow\n\n\n\nSample-level quality\n\nCell viability must exceed 80%\nAccurate assessment of cell number\n\nLibrary-level quality\n\nDNA fragment distribution (multiples of 200bp)\n\n\n\n\n\nData analysis workflow\n\n\n\nCounts QC\n\nUnique nuclear fragments (&gt;1000)\nFraction of transposition events in the peaks (&gt;0.3)\nTranscription start sites (TSS) enrichment score (&gt;5)\nRatio of mononucleosomal to nucleosome-free fragments\nApply filters separately for each sample\n\nGenerate features (peaks/target regions)\n\nVarious methods exist\n\nDimensionality reduction\nCells with similar accessibility profiles are organized into clusters\nThere are two approaches to cell identity annotation: the cell type-specific peaks-based method and the scRNA-seq-based method\n\nEnhancers can be used to accurately annotate cell types as distal cis-regulatory elements specific to particular cell types and states.\nCell type-specific gene expression is predicted based on their accessibility and used to annotate cells\n\n\n\n\n\nEpigenomic profiling from scATAC-seq data.\n\n\n\nCell type-specific chromatin architecture\n\nProfiling the regulatory elements for each cluster/cell type\nIdentifying differentially accessible regions between different clusters/cell types\nUncovering key factors that contribute to the altered chromatin accessibility\nLinking promoter–enhancer interactions\n\nThree main strategies are used to identify TFs of interest\n\nSearching for overrepresented motifs in cell type-specific accessible regions\nComparing motif activity between cell types\nDetecting foot-printing for TF occupancy\n\n\nShi et al. (2022)\nSingle-cell ATAC sequencing analysis: From data preprocessing to hypothesis generation\nBaek & Lee (2020)",
    "crumbs": [
      "**Single Cell RNASeq**",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>ATAC-Seq</span>"
    ]
  },
  {
    "objectID": "chapters/atacseq/index.html#feature-selection",
    "href": "chapters/atacseq/index.html#feature-selection",
    "title": "5  ATAC-Seq",
    "section": "5.2 Feature selection",
    "text": "5.2 Feature selection\nThe performance of various methods for analyzing datasets with different cell structures and sizes is discussed. For simple datasets with distinct cell types, all methods are effective. For datasets with small cell classes or with hierarchical clustering and similar subtypes, SnapATAC and SnapATAC2 are preferred. SnapATAC is not memory-efficient for large datasets (over 20,000 cells); in such cases, SnapATAC2 is better. Signac outperforms ArchR, but ArchR is more memory-efficient. Adding aggregation steps to Signac does not significantly increase time or memory usage. Feature engineering choices like peak versus bins calling do not majorly affect performance, so users can choose based on preference. Recommended latent space dimensions vary by method: 10-30 for SnapATAC/SnapATAC2, 10-50 for Signac/ArchR, and even larger for aggregation methods.\nDe Rop et al. (2024)",
    "crumbs": [
      "**Single Cell RNASeq**",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>ATAC-Seq</span>"
    ]
  },
  {
    "objectID": "chapters/atacseq/index.html#celltyping",
    "href": "chapters/atacseq/index.html#celltyping",
    "title": "5  ATAC-Seq",
    "section": "5.3 Celltyping",
    "text": "5.3 Celltyping\n\n\n\nPerformance of label transfer methods on single-cell data from selected mouse and human tissues. (A) Overall metrics considering performance on all scATAC-seq cells.\n\n\nHere, we evaluated the performance of five scATAC-seq annotation methods on both their classification accuracy and scalability using publicly available single-cell datasets from mouse and human tissues including brain, lung, kidney, PBMC, and BMMC. Using the BMMC data as basis, we further investigated the performance of these methods across different data sizes, mislabeling rates, sequencing depths and the number of cell types unique to scATAC-seq. Bridge integration, which is the only method that requires additional multimodal data and does not need gene activity calculation, was overall the best method and robust to changes in data size, mislabeling rate and sequencing depth. Conos was the most time and memory efficient method but performed the worst in terms of prediction accuracy. scJoint tended to assign cells to similar cell types and performed relatively poorly for complex datasets with deep annotations but performed better for datasets only with major label annotations. The performance of scGCN and Seurat v3 was moderate, but scGCN was the most time-consuming method and had the most similar performance to random classifiers for cell types unique to scATAC-seq.\nWang et al. (2022)",
    "crumbs": [
      "**Single Cell RNASeq**",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>ATAC-Seq</span>"
    ]
  },
  {
    "objectID": "chapters/atacseq/index.html#differentially-accessible-regions",
    "href": "chapters/atacseq/index.html#differentially-accessible-regions",
    "title": "5  ATAC-Seq",
    "section": "5.4 Differentially accessible regions",
    "text": "5.4 Differentially accessible regions\nGontarz et al. (2020)\n\nBest practices for scATAC-Seq\n\nWilcoxon rank-sum test was the most widely used for DA\nStatistical methods that aggregated individual cells to form ‘pseudobulks’ generally yielded better DA results mainly due to reduced false discovery rates\nSingle-cell focused DA analysis methods often produced false discoveries, especially noticeable in data without biological differences\n\n\nTeo et al. (2024)",
    "crumbs": [
      "**Single Cell RNASeq**",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>ATAC-Seq</span>"
    ]
  },
  {
    "objectID": "chapters/atacseq/index.html#benchmarking-tools",
    "href": "chapters/atacseq/index.html#benchmarking-tools",
    "title": "5  ATAC-Seq",
    "section": "5.5 Benchmarking tools",
    "text": "5.5 Benchmarking tools\nOur benchmarking results highlight SnapATAC, cisTopic, and Cusanovich2018 as the top performing scATAC-seq data analysis methods to perform clustering across all datasets and different metrics. Methods that preserve information at the peak level (cisTopic, Cusanovich2018, Scasat) or bin level (SnapATAC) generally outperform those that summarize accessible chromatin regions at the motif/k-mer level (chromVAR, BROCKMAN, SCRAT) or over the gene body (Cicero, Gene Scoring). In addition, methods that implement a dimensionality reduction step (BROCKMAN, cisTopic, Cusanovich2018, Scasat, SnapATAC) generally show advantages over the other methods without this important step. SnapATAC is the most scalable method; it was the only method capable of processing more than 80,000 cells. Cusanovich2018 is the method that best balances analysis performance and running time.\nChen et al. (2019)\nOverall, feature aggregation, SnapATAC, and SnapATAC2 outperform latent semantic indexing-based methods. For datasets with complex cell-type structures, SnapATAC and SnapATAC2 are preferred. With large datasets, SnapATAC2 and ArchR are most scalable.\nLuo et al. (2024)",
    "crumbs": [
      "**Single Cell RNASeq**",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>ATAC-Seq</span>"
    ]
  },
  {
    "objectID": "chapters/atacseq/index.html#tools",
    "href": "chapters/atacseq/index.html#tools",
    "title": "5  ATAC-Seq",
    "section": "5.6 Tools",
    "text": "5.6 Tools\n Granja et al. (2021)\n\n Signac (R) Stuart et al. (2021)\n ArchR (R) Granja et al. (2021)\n SnapATAC (R) Fang et al. (2021)\n pycisTopic (Python)\n Scasat (Bash,Python)",
    "crumbs": [
      "**Single Cell RNASeq**",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>ATAC-Seq</span>"
    ]
  },
  {
    "objectID": "chapters/atacseq/index.html#tutorials",
    "href": "chapters/atacseq/index.html#tutorials",
    "title": "5  ATAC-Seq",
    "section": "5.7 Tutorials",
    "text": "5.7 Tutorials\n\n scATAC-Seq analysis in R using Signac by Sanbomics\n scATAC-Seq analysis in R using Signac by Bioinformagician",
    "crumbs": [
      "**Single Cell RNASeq**",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>ATAC-Seq</span>"
    ]
  },
  {
    "objectID": "chapters/atacseq/index.html#references",
    "href": "chapters/atacseq/index.html#references",
    "title": "5  ATAC-Seq",
    "section": "References",
    "text": "References\n\n\n\n\nBaek, S., & Lee, I. (2020). Single-cell ATAC sequencing analysis: From data preprocessing to hypothesis generation. Computational and Structural Biotechnology Journal, 18, 1429–1439. https://www.sciencedirect.com/science/article/pii/S2001037020303019\n\n\nChen, H., Lareau, C., Andreani, T., Vinyard, M. E., Garcia, S. P., Clement, K., Andrade-Navarro, M. A., Buenrostro, J. D., & Pinello, L. (2019). Assessment of computational methods for the analysis of single-cell ATAC-seq data. Genome Biology, 20(1), 1–25. https://genomebiology.biomedcentral.com/articles/10.1186/s13059-019-1854-5\n\n\nDe Rop, F. V., Hulselmans, G., Flerin, C., Soler-Vila, P., Rafels, A., Christiaens, V., González-Blas, C. B., Marchese, D., Caratu, G., Poovathingal, S., et al. (2024). Systematic benchmarking of single-cell ATAC-sequencing protocols. Nature Biotechnology, 42(6), 916–926. https://genomebiology.biomedcentral.com/articles/10.1186/s13059-024-03356-x\n\n\nFang, R., Preissl, S., Li, Y., Hou, X., Lucero, J., Wang, X., Motamedi, A., Shiau, A. K., Zhou, X., Xie, F., et al. (2021). Comprehensive analysis of single cell ATAC-seq data with SnapATAC. Nature Communications, 12(1), 1337. https://www.nature.com/articles/s41467-021-21583-9\n\n\nGontarz, P., Fu, S., Xing, X., Liu, S., Miao, B., Bazylianska, V., Sharma, A., Madden, P., Cates, K., Yoo, A., et al. (2020). Comparison of differential accessibility analysis strategies for ATAC-seq data. Scientific Reports, 10(1), 10150. https://www.nature.com/articles/s41598-020-66998-4\n\n\nGrandi, F. C., Modi, H., Kampman, L., & Corces, M. R. (2022). Chromatin accessibility profiling by ATAC-seq. Nature Protocols, 17(6), 1518–1552. https://www.nature.com/articles/s41596-022-00692-9\n\n\nGranja, J. M., Corces, M. R., Pierce, S. E., Bagdatli, S. T., Choudhry, H., Chang, H. Y., & Greenleaf, W. J. (2021). ArchR is a scalable software package for integrative single-cell chromatin accessibility analysis. Nature Genetics, 53(3), 403–411. https://www.nature.com/articles/s41588-021-00790-6\n\n\nLuo, S., Germain, P.-L., Robinson, M. D., & Meyenn, F. von. (2024). Benchmarking computational methods for single-cell chromatin data analysis. Genome Biology, 25(1), 225. https://link.springer.com/article/10.1186/s13059-024-03356-x\n\n\nShi, P., Nie, Y., Yang, J., Zhang, W., Tang, Z., & Xu, J. (2022). Fundamental and practical approaches for single-cell ATAC-seq analysis. Abiotech, 3(3), 212–223. https://link.springer.com/article/10.1007/s42994-022-00082-5\n\n\nStuart, T., Srivastava, A., Madad, S., Lareau, C. A., & Satija, R. (2021). Single-cell chromatin state analysis with signac. Nature Methods, 18(11), 1333–1341. https://www.nature.com/articles/s41592-021-01282-5\n\n\nTeo, A. Y. Y., Squair, J. W., Courtine, G., & Skinnider, M. A. (2024). Best practices for differential accessibility analysis in single-cell epigenomics. Nature Communications, 15(1), 8805. https://www.nature.com/articles/s41467-024-53089-5\n\n\nWang, Y., Sun, X., & Zhao, H. (2022). Benchmarking automated cell type annotation tools for single-cell ATAC-seq data. Frontiers in Genetics, 13, 1063233. https://www.frontiersin.org/journals/genetics/articles/10.3389/fgene.2022.1063233/full\n\n\nYan, F., Powell, D. R., Curtis, D. J., & Wong, N. C. (2020). From reads to insight: A hitchhiker’s guide to ATAC-seq data analysis. Genome Biology, 21, 1–16. https://link.springer.com/article/10.1186/s13059-020-1929-3",
    "crumbs": [
      "**Single Cell RNASeq**",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>ATAC-Seq</span>"
    ]
  },
  {
    "objectID": "chapters/meta/index.html",
    "href": "chapters/meta/index.html",
    "title": "6  Meta transcriptomics",
    "section": "",
    "text": "6.1 Overview\nMehta et al. (2021)",
    "crumbs": [
      "**Meta Transcriptomics**",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Meta transcriptomics</span>"
    ]
  },
  {
    "objectID": "chapters/meta/index.html#overview",
    "href": "chapters/meta/index.html#overview",
    "title": "6  Meta transcriptomics",
    "section": "",
    "text": "ASaiM-MT workflow for metatranscriptomics data.",
    "crumbs": [
      "**Meta Transcriptomics**",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Meta transcriptomics</span>"
    ]
  },
  {
    "objectID": "chapters/meta/index.html#tools",
    "href": "chapters/meta/index.html#tools",
    "title": "6  Meta transcriptomics",
    "section": "6.2 Tools",
    "text": "6.2 Tools\n\n Kraken 2 Taxonomic classification system\n SortMeRNA Filtering, mapping and OTU picking\n SourMash Compare sequence similarity between datasets\n MetaPhlAn 2 Taxonomy quantitation / Community profiling\n HUMAnN 2 Functional quantitation",
    "crumbs": [
      "**Meta Transcriptomics**",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Meta transcriptomics</span>"
    ]
  },
  {
    "objectID": "chapters/meta/index.html#references",
    "href": "chapters/meta/index.html#references",
    "title": "6  Meta transcriptomics",
    "section": "References",
    "text": "References\n\n\n\n\nMehta, S., Crane, M., Leith, E., Batut, B., Hiltemann, S., Arntzen, M. Ø., Kunath, B. J., Pope, P. B., Delogu, F., Sajulga, R., et al. (2021). ASaiM-MT: A validated and optimized ASaiM workflow for metatranscriptomics analysis within galaxy framework. F1000Research, 10, 103.",
    "crumbs": [
      "**Meta Transcriptomics**",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Meta transcriptomics</span>"
    ]
  }
]